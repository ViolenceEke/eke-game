/// <reference types="react" />
import type { MessageInputReducerAction, MessageInputState } from './useMessageInputState';
import type { EmojiData } from 'emoji-mart';
import type { DefaultAttachmentType, DefaultUserType } from '../../../types/types';
export declare const useEmojiPicker: <At extends DefaultAttachmentType = DefaultAttachmentType, Us extends DefaultUserType<Us> = DefaultUserType<import("../../../types/types").DefaultUserTypeInternal>>(state: MessageInputState<At, Us>, dispatch: import("react").Dispatch<MessageInputReducerAction<Us>>, insertText: (textToInsert: string) => void, textareaRef: React.MutableRefObject<HTMLTextAreaElement | undefined>, closeEmojiPickerOnClick?: boolean | undefined) => {
    closeEmojiPicker: (event: MouseEvent) => void;
    emojiPickerRef: import("react").RefObject<HTMLDivElement>;
    handleEmojiKeyDown: import("react").KeyboardEventHandler<HTMLButtonElement>;
    onSelectEmoji: (emoji: EmojiData) => void;
    openEmojiPicker: import("react").MouseEventHandler<HTMLButtonElement>;
};
//# sourceMappingURL=useEmojiPicker.d.ts.map