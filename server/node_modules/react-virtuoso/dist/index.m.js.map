{"version":3,"file":"index.m.js","sources":["../src/comparators.tsx","../src/domIOSystem.ts","../src/loggerSystem.ts","../src/propsReadySystem.ts","../src/stateFlagsSystem.ts","../src/scrollSeekSystem.ts","../src/AATree.ts","../src/utils/binaryArraySearch.ts","../src/utils/correctItemSize.ts","../src/sizeSystem.ts","../src/scrollToIndexSystem.ts","../src/sizeRangeSystem.ts","../src/windowScrollerSystem.ts","../src/gridSystem.ts","../src/hooks/useSize.ts","../src/hooks/useWindowViewportRect.ts","../src/hooks/useIsomorphicLayoutEffect.ts","../src/hooks/useChangedChildSizes.ts","../src/hooks/useScrollTop.ts","../src/initialTopMostItemIndexSystem.ts","../src/followOutputSystem.ts","../src/groupedListSystem.ts","../src/listStateSystem.ts","../src/utils/simpleMemoize.ts","../src/initialItemCountSystem.ts","../src/topItemCountSystem.ts","../src/totalListHeightSystem.ts","../src/upwardScrollFixSystem.ts","../src/initialScrollTopSystem.ts","../src/alignToBottomSystem.ts","../src/scrollIntoViewSystem.ts","../src/listSystem.ts","../src/utils/positionStickyCssValue.ts","../src/List.tsx","../src/Grid.tsx","../src/Table.tsx","../src/components.tsx"],"sourcesContent":["import { ListRange } from './interfaces'\n\nexport function tupleComparator(prev: [any, any] | undefined, current: [any, any]) {\n  return !!(prev && prev[0] === current[0] && prev[1] === current[1])\n}\n\nexport function rangeComparator(prev: ListRange | undefined, next: ListRange) {\n  return !!(prev && prev.startIndex === next.startIndex && prev.endIndex === next.endIndex)\n}\n","import * as u from '@virtuoso.dev/urx'\n\nexport const domIOSystem = u.system(\n  () => {\n    const scrollContainerState = u.stream<[number, number]>()\n    const scrollTop = u.stream<number>()\n    const deviation = u.statefulStream(0)\n    const smoothScrollTargetReached = u.stream<true>()\n    const statefulScrollTop = u.statefulStream(0)\n    const viewportHeight = u.stream<number>()\n    const scrollHeight = u.stream<number>()\n    const headerHeight = u.statefulStream(0)\n    const footerHeight = u.statefulStream(0)\n    const scrollTo = u.stream<ScrollToOptions>()\n    const scrollBy = u.stream<ScrollToOptions>()\n    const scrollingInProgress = u.statefulStream(false)\n\n    u.connect(\n      u.pipe(\n        scrollContainerState,\n        u.map(([scrollTop]) => scrollTop)\n      ),\n      scrollTop\n    )\n\n    u.connect(\n      u.pipe(\n        scrollContainerState,\n        u.map(([, scrollHeight]) => scrollHeight)\n      ),\n      scrollHeight\n    )\n\n    u.connect(scrollTop, statefulScrollTop)\n\n    return {\n      // input\n      scrollContainerState,\n      scrollTop,\n      viewportHeight,\n      headerHeight,\n      footerHeight,\n      scrollHeight,\n      smoothScrollTargetReached,\n\n      // signals\n      scrollTo,\n      scrollBy,\n\n      // state\n      statefulScrollTop,\n      deviation,\n      scrollingInProgress,\n    }\n  },\n  [],\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace globalThis {\n  let VIRTUOSO_LOG_LEVEL: LogLevel | undefined\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace window {\n  let VIRTUOSO_LOG_LEVEL: LogLevel | undefined\n}\n\nexport enum LogLevel {\n  DEBUG,\n  INFO,\n  WARN,\n  ERROR,\n}\nexport interface LogMessage {\n  level: LogLevel\n  message: any\n  label: string\n}\n\nexport type Log = (label: string, message: any, level?: LogLevel) => void\n\nconst CONSOLE_METHOD_MAP = {\n  [LogLevel.DEBUG]: 'debug',\n  [LogLevel.INFO]: 'log',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error',\n} as const\n\nconst getGlobalThis = () => (typeof globalThis === 'undefined' ? window : globalThis)\n\nexport const loggerSystem = u.system(\n  () => {\n    const logLevel = u.statefulStream<LogLevel>(LogLevel.ERROR)\n    const log = u.statefulStream<Log>((label: string, message: any, level: LogLevel = LogLevel.INFO) => {\n      const currentLevel = getGlobalThis()['VIRTUOSO_LOG_LEVEL'] ?? u.getValue(logLevel)\n      if (level >= currentLevel) {\n        // eslint-disable-next-line no-console\n        console[CONSOLE_METHOD_MAP[level]](\n          '%creact-virtuoso: %c%s %o',\n          'color: #0253b3; font-weight: bold',\n          'color: initial',\n          label,\n          message\n        )\n      }\n    })\n\n    return {\n      log,\n      logLevel,\n    }\n  },\n  [],\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { getValue, tup } from '@virtuoso.dev/urx'\nimport { loggerSystem, LogLevel } from './loggerSystem'\n\nexport const propsReadySystem = u.system(\n  ([{ log }]) => {\n    const propsReady = u.statefulStream(false)\n\n    const didMount = u.streamFromEmitter(\n      u.pipe(\n        propsReady,\n        u.filter((ready) => ready),\n        u.distinctUntilChanged()\n      )\n    )\n    u.subscribe(propsReady, (value) => {\n      value && getValue(log)('props updated', {}, LogLevel.DEBUG)\n    })\n\n    return { propsReady, didMount }\n  },\n  tup(loggerSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\n\nexport const UP = 'up' as const\nexport const DOWN = 'down' as const\nexport const NONE = 'none' as const\nexport type ScrollDirection = typeof UP | typeof DOWN | typeof NONE\n\nexport interface ListBottomInfo {\n  bottom: number\n  offsetBottom: number\n}\n\nexport interface AtBottomParams {\n  offsetBottom: number\n  scrollTop: number\n  viewportHeight: number\n  scrollHeight: number\n}\n\nexport type NotAtBottomReason =\n  | 'SIZE_INCREASED'\n  | 'NOT_SHOWING_LAST_ITEM'\n  | 'VIEWPORT_HEIGHT_DECREASING'\n  | 'SCROLLING_UPWARDS'\n  | 'NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM'\n\nexport type AtBottomReason = 'SIZE_DECREASED' | 'SCROLLED_DOWN'\n\nexport type AtBottomState =\n  | {\n      atBottom: false\n      notAtBottomBecause: NotAtBottomReason\n      state: AtBottomParams\n    }\n  | {\n      atBottom: true\n      state: AtBottomParams\n      atBottomBecause: AtBottomReason\n      scrollTopDelta: number\n    }\n\nconst INITIAL_BOTTOM_STATE = {\n  atBottom: false,\n  notAtBottomBecause: 'NOT_SHOWING_LAST_ITEM',\n  state: {\n    offsetBottom: 0,\n    scrollTop: 0,\n    viewportHeight: 0,\n    scrollHeight: 0,\n  },\n} as AtBottomState\n\nexport const stateFlagsSystem = u.system(([{ scrollContainerState, scrollTop, viewportHeight, headerHeight, footerHeight, scrollBy }]) => {\n  const isAtBottom = u.statefulStream(false)\n  const isAtTop = u.statefulStream(true)\n  const atBottomStateChange = u.stream<boolean>()\n  const atTopStateChange = u.stream<boolean>()\n  const atBottomThreshold = u.statefulStream(4)\n\n  // skip 1 to avoid an initial on/off flick\n  const isScrolling = u.streamFromEmitter(\n    u.pipe(\n      u.merge(u.pipe(u.duc(scrollTop), u.skip(1), u.mapTo(true)), u.pipe(u.duc(scrollTop), u.skip(1), u.mapTo(false), u.debounceTime(100))),\n      u.distinctUntilChanged()\n    )\n  )\n\n  const isScrollingBy = u.statefulStreamFromEmitter(\n    u.pipe(u.merge(u.pipe(scrollBy, u.mapTo(true)), u.pipe(scrollBy, u.mapTo(false), u.debounceTime(200))), u.distinctUntilChanged()),\n    false\n  )\n\n  // u.subscribe(isScrollingBy, (isScrollingBy) => console.log({ isScrollingBy }))\n\n  u.connect(\n    u.pipe(\n      u.duc(scrollTop),\n      u.map((top) => top === 0),\n      u.distinctUntilChanged()\n    ),\n    isAtTop\n  )\n\n  u.connect(isAtTop, atTopStateChange)\n\n  const atBottomState = u.streamFromEmitter(\n    u.pipe(\n      u.combineLatest(scrollContainerState, u.duc(viewportHeight), u.duc(headerHeight), u.duc(footerHeight), u.duc(atBottomThreshold)),\n      u.scan((current, [[scrollTop, scrollHeight], viewportHeight, _headerHeight, _footerHeight, atBottomThreshold]) => {\n        const isAtBottom = scrollTop + viewportHeight - scrollHeight > -atBottomThreshold\n        const state = {\n          viewportHeight,\n          scrollTop,\n          scrollHeight,\n        }\n\n        if (isAtBottom) {\n          let atBottomBecause: 'SIZE_DECREASED' | 'SCROLLED_DOWN'\n          let scrollTopDelta: number\n          if (scrollTop > current.state.scrollTop) {\n            atBottomBecause = 'SCROLLED_DOWN'\n            scrollTopDelta = current.state.scrollTop - scrollTop\n          } else {\n            atBottomBecause = 'SIZE_DECREASED'\n            scrollTopDelta = current.state.scrollTop - scrollTop || (current as { scrollTopDelta: number }).scrollTopDelta\n          }\n          return {\n            atBottom: true,\n            state,\n            atBottomBecause,\n            scrollTopDelta,\n          } as AtBottomState\n        }\n\n        let notAtBottomBecause: NotAtBottomReason\n\n        if (state.scrollHeight > current.state.scrollHeight) {\n          notAtBottomBecause = 'SIZE_INCREASED'\n        } else if (viewportHeight < current.state.viewportHeight) {\n          notAtBottomBecause = 'VIEWPORT_HEIGHT_DECREASING'\n        } else if (scrollTop < current.state.scrollTop) {\n          notAtBottomBecause = 'SCROLLING_UPWARDS'\n        } else {\n          notAtBottomBecause = 'NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM'\n        }\n\n        return {\n          atBottom: false,\n          notAtBottomBecause,\n          state,\n        } as AtBottomState\n      }, INITIAL_BOTTOM_STATE),\n      u.distinctUntilChanged((prev, next) => {\n        return prev && prev.atBottom === next.atBottom\n      })\n    )\n  )\n\n  const lastJumpDueToItemResize = u.statefulStreamFromEmitter(\n    u.pipe(\n      scrollContainerState,\n      u.scan(\n        (current, [scrollTop, scrollHeight]) => {\n          if (current.scrollHeight !== scrollHeight) {\n            if (current.scrollTop !== scrollTop) {\n              return {\n                scrollHeight,\n                scrollTop,\n                jump: current.scrollTop - scrollTop,\n                changed: true,\n              }\n            } else {\n              return {\n                scrollHeight,\n                scrollTop,\n                jump: 0,\n                changed: true,\n              }\n            }\n          } else {\n            return {\n              scrollTop,\n              scrollHeight,\n              jump: 0,\n              changed: false,\n            }\n          }\n        },\n        { scrollHeight: 0, jump: 0, scrollTop: 0, changed: false }\n      ),\n      u.filter((value) => value.changed),\n      u.map((value) => value.jump)\n    ),\n    0\n  )\n\n  u.connect(\n    u.pipe(\n      atBottomState,\n      u.map((state) => state.atBottom)\n    ),\n    isAtBottom\n  )\n\n  u.connect(u.pipe(isAtBottom, u.throttleTime(50)), atBottomStateChange)\n\n  const scrollDirection = u.statefulStream<ScrollDirection>(DOWN)\n\n  u.connect(\n    u.pipe(\n      scrollContainerState,\n      u.map(([scrollTop]) => scrollTop),\n      u.distinctUntilChanged(),\n      u.scan(\n        (acc, scrollTop) => {\n          // if things change while compensating for items, ignore,\n          // but store the new scrollTop\n          if (u.getValue(isScrollingBy)) {\n            return { direction: acc.direction, prevScrollTop: scrollTop }\n          }\n\n          return { direction: scrollTop < acc.prevScrollTop ? UP : DOWN, prevScrollTop: scrollTop }\n        },\n        { direction: DOWN, prevScrollTop: 0 } as { direction: ScrollDirection; prevScrollTop: number }\n      ),\n      u.map((value) => value.direction)\n    ),\n    scrollDirection\n  )\n\n  u.connect(u.pipe(scrollContainerState, u.throttleTime(50), u.mapTo(NONE)), scrollDirection)\n\n  const scrollVelocity = u.statefulStream(0)\n\n  u.connect(\n    u.pipe(\n      isScrolling,\n      u.filter((value) => !value),\n      u.mapTo(0)\n    ),\n    scrollVelocity\n  )\n\n  u.connect(\n    u.pipe(\n      scrollTop,\n      u.throttleTime(100),\n      u.withLatestFrom(isScrolling),\n      u.filter(([_, isScrolling]) => !!isScrolling),\n      u.scan(([_, prev], [next]) => [prev, next], [0, 0]),\n      u.map(([prev, next]) => next - prev)\n    ),\n    scrollVelocity\n  )\n\n  return {\n    isScrolling,\n    isAtTop,\n    isAtBottom,\n    atBottomState,\n    atTopStateChange,\n    atBottomStateChange,\n    scrollDirection,\n    atBottomThreshold,\n    scrollVelocity,\n    lastJumpDueToItemResize,\n  }\n}, u.tup(domIOSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { ListRange } from './interfaces'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { ScrollSeekConfiguration } from './interfaces'\n\nexport const scrollSeekSystem = u.system(\n  ([{ scrollVelocity }]) => {\n    const isSeeking = u.statefulStream(false)\n    const rangeChanged = u.stream<ListRange>()\n    const scrollSeekConfiguration = u.statefulStream<ScrollSeekConfiguration | undefined | false>(false)\n\n    u.connect(\n      u.pipe(\n        scrollVelocity,\n        u.withLatestFrom(scrollSeekConfiguration, isSeeking, rangeChanged),\n        u.filter(([_, config]) => !!config),\n        u.map(([speed, config, isSeeking, range]) => {\n          const { exit, enter } = config as ScrollSeekConfiguration\n          if (isSeeking) {\n            if (exit(speed, range)) {\n              return false\n            }\n          } else {\n            if (enter(speed, range)) {\n              return true\n            }\n          }\n          return isSeeking\n        }),\n        u.distinctUntilChanged()\n      ),\n      isSeeking\n    )\n\n    u.subscribe(\n      u.pipe(u.combineLatest(isSeeking, scrollVelocity, rangeChanged), u.withLatestFrom(scrollSeekConfiguration)),\n      ([[isSeeking, velocity, range], config]) => isSeeking && config && config.change && config.change(velocity, range)\n    )\n\n    return { isSeeking, scrollSeekConfiguration, scrollVelocity, scrollSeekRangeChanged: rangeChanged }\n  },\n  u.tup(stateFlagsSystem),\n  { singleton: true }\n)\n","interface NilNode {\n  lvl: 0\n}\n\nconst NIL_NODE: NilNode = { lvl: 0 }\n\ninterface NodeData<T> {\n  k: number\n  v: T\n}\n\ninterface NonNilAANode<T> {\n  k: number\n  v: T\n  lvl: number\n  l: NonNilAANode<T> | NilNode\n  r: NonNilAANode<T> | NilNode\n}\n\nexport interface Range<T> {\n  start: number\n  end: number\n  value: T\n}\n\nexport type AANode<T> = NilNode | NonNilAANode<T>\n\nfunction newAANode<T>(k: number, v: T, lvl: number, l: AANode<T> = NIL_NODE, r: AANode<T> = NIL_NODE): NonNilAANode<T> {\n  return { k, v, lvl, l, r }\n}\n\nexport function empty(node: AANode<any>): node is NilNode {\n  return node === NIL_NODE\n}\n\nexport function newTree<T>(): AANode<T> {\n  return NIL_NODE\n}\n\nexport function remove<T>(node: AANode<T>, key: number): AANode<T> {\n  if (empty(node)) return NIL_NODE\n\n  const { k, l, r } = node\n\n  if (key === k) {\n    if (empty(l)) {\n      return r\n    } else if (empty(r)) {\n      return l\n    } else {\n      const [lastKey, lastValue] = last(l)\n      return adjust(clone(node, { k: lastKey, v: lastValue, l: deleteLast(l) }))\n    }\n  } else if (key < k) {\n    return adjust(clone(node, { l: remove(l, key) }))\n  } else {\n    return adjust(clone(node, { r: remove(r, key) }))\n  }\n}\n\nexport function find<T>(node: AANode<T>, key: number): T | undefined {\n  if (empty(node)) {\n    return\n  }\n\n  if (key === node.k) {\n    return node.v\n  } else if (key < node.k) {\n    return find(node.l, key)\n  } else {\n    return find(node.r, key)\n  }\n}\n\nexport function findMaxKeyValue<T>(node: AANode<T>, value: number, field: 'k' | 'v' = 'k'): [number, T | undefined] {\n  if (empty(node)) {\n    return [-Infinity, undefined]\n  }\n\n  if (node[field] === value) {\n    return [node.k, node.v]\n  }\n\n  if (node[field] < value) {\n    const r = findMaxKeyValue(node.r, value, field)\n    if (r[0] === -Infinity) {\n      return [node.k, node.v]\n    } else {\n      return r\n    }\n  }\n\n  return findMaxKeyValue(node.l, value, field)\n}\n\nexport function insert<T>(node: AANode<T>, k: number, v: T): NonNilAANode<T> {\n  if (empty(node)) {\n    return newAANode(k, v, 1)\n  }\n  if (k === node.k) {\n    return clone(node, { k, v })\n  } else if (k < node.k) {\n    return rebalance(clone(node, { l: insert(node.l, k, v) }))\n  } else {\n    return rebalance(clone(node, { r: insert(node.r, k, v) }))\n  }\n}\n\nexport function walkWithin<T>(node: AANode<T>, start: number, end: number): NodeData<T>[] {\n  if (empty(node)) {\n    return []\n  }\n\n  const { k, v, l, r } = node\n  let result: NodeData<T>[] = []\n  if (k > start) {\n    result = result.concat(walkWithin(l, start, end))\n  }\n\n  if (k >= start && k <= end) {\n    result.push({ k, v })\n  }\n\n  if (k <= end) {\n    result = result.concat(walkWithin(r, start, end))\n  }\n\n  return result\n}\n\nexport function walk<T>(node: AANode<T>): NodeData<T>[] {\n  if (empty(node)) {\n    return []\n  }\n\n  return [...walk(node.l), { k: node.k, v: node.v }, ...walk(node.r)]\n}\n\nfunction last<T>(node: NonNilAANode<T>): [number, T] {\n  return empty(node.r) ? [node.k, node.v] : last(node.r)\n}\n\nfunction deleteLast<T>(node: NonNilAANode<T>): AANode<T> {\n  return empty(node.r) ? node.l : adjust(clone(node, { r: deleteLast(node.r) }))\n}\n\nfunction clone<T>(node: NonNilAANode<T>, args: Partial<NonNilAANode<T>>): NonNilAANode<T> {\n  return newAANode(\n    args.k !== undefined ? args.k : node.k,\n    args.v !== undefined ? args.v : node.v,\n    args.lvl !== undefined ? args.lvl : node.lvl,\n    args.l !== undefined ? args.l : node.l,\n    args.r !== undefined ? args.r : node.r\n  )\n}\n\nfunction isSingle(node: AANode<any>) {\n  return empty(node) || node.lvl > node.r.lvl\n}\n\nfunction rebalance<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  return split(skew(node))\n}\n\nfunction adjust<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { l, r, lvl } = node\n  if (r.lvl >= lvl - 1 && l.lvl >= lvl - 1) {\n    return node\n  } else if (lvl > r.lvl + 1) {\n    if (isSingle(l)) {\n      return skew(clone(node, { lvl: lvl - 1 }))\n    } else {\n      if (!empty(l) && !empty(l.r)) {\n        return clone(l.r, {\n          l: clone(l, { r: l.r.l }),\n          r: clone(node, {\n            l: l.r.r,\n            lvl: lvl - 1,\n          }),\n          lvl: lvl,\n        })\n      } else {\n        throw new Error('Unexpected empty nodes')\n      }\n    }\n  } else {\n    if (isSingle(node)) {\n      return split(clone(node, { lvl: lvl - 1 }))\n    } else {\n      if (!empty(r) && !empty(r.l)) {\n        const rl = r.l\n        const rlvl = isSingle(rl) ? r.lvl - 1 : r.lvl\n\n        return clone(rl, {\n          l: clone(node, {\n            r: rl.l,\n            lvl: lvl - 1,\n          }),\n          r: split(clone(r, { l: rl.r, lvl: rlvl })),\n          lvl: rl.lvl + 1,\n        })\n      } else {\n        throw new Error('Unexpected empty nodes')\n      }\n    }\n  }\n}\n\nexport function keys(node: AANode<any>): number[] {\n  if (empty(node)) {\n    return []\n  }\n  return [...keys(node.l), node.k, ...keys(node.r)]\n}\n\nexport function ranges<T>(node: AANode<T>): Range<T>[] {\n  return toRanges(walk(node))\n}\n\nexport function rangesWithin<T>(node: AANode<T>, startIndex: number, endIndex: number): Range<T>[] {\n  if (empty(node)) {\n    return []\n  }\n  const adjustedStart = findMaxKeyValue(node, startIndex)[0]\n  return toRanges(walkWithin(node, adjustedStart, endIndex))\n}\n\nexport function arrayToRanges<T, V>(\n  items: T[],\n  parser: (item: T) => { index: number; value: V }\n): Array<{ start: number; end: number; value: V }> {\n  const length = items.length\n  if (length === 0) {\n    return []\n  }\n\n  let { index: start, value } = parser(items[0])\n\n  const result = []\n\n  for (let i = 1; i < length; i++) {\n    const { index: nextIndex, value: nextValue } = parser(items[i])\n    result.push({ start, end: nextIndex - 1, value })\n\n    start = nextIndex\n    value = nextValue\n  }\n\n  result.push({ start, end: Infinity, value })\n  return result\n}\n\nfunction toRanges<T>(nodes: NodeData<T>[]): Range<T>[] {\n  return arrayToRanges(nodes, ({ k: index, v: value }) => ({ index, value }))\n}\n\nfunction split<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { r, lvl } = node\n\n  return !empty(r) && !empty(r.r) && r.lvl === lvl && r.r.lvl === lvl ? clone(r, { l: clone(node, { r: r.l }), lvl: lvl + 1 }) : node\n}\n\nfunction skew<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { l } = node\n\n  return !empty(l) && l.lvl === node.lvl ? clone(l, { r: clone(node, { l: l.r }) }) : node\n}\n","export type Comparator<T> = {\n  (item: T, value: number): -1 | 0 | 1\n}\n\nexport function findIndexOfClosestSmallerOrEqual<T>(items: T[], value: number, comparator: Comparator<T>, start = 0): number {\n  let end = items.length - 1\n\n  while (start <= end) {\n    const index = Math.floor((start + end) / 2)\n    const item = items[index]\n    const match = comparator(item, value)\n    if (match === 0) {\n      return index\n    }\n\n    if (match === -1) {\n      if (end - start < 2) {\n        return index - 1\n      }\n      end = index - 1\n    } else {\n      if (end === start) {\n        return index\n      }\n      start = index + 1\n    }\n  }\n\n  throw new Error(`Failed binary finding record in array - ${items.join(',')}, searched for ${value}`)\n}\n\nexport function findClosestSmallerOrEqual<T>(items: T[], value: number, comparator: Comparator<T>): T {\n  return items[findIndexOfClosestSmallerOrEqual(items, value, comparator)]\n}\n\nexport function findRange<T>(items: T[], startValue: number, endValue: number, comparator: Comparator<T>): T[] {\n  const startIndex = findIndexOfClosestSmallerOrEqual(items, startValue, comparator)\n  const endIndex = findIndexOfClosestSmallerOrEqual(items, endValue, comparator, startIndex)\n  return items.slice(startIndex, endIndex + 1)\n}\n","export function correctItemSize(el: HTMLElement, dimension: 'height' | 'width') {\n  return Math.round(el.getBoundingClientRect()[dimension])\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { arrayToRanges, AANode, empty, findMaxKeyValue, insert, newTree, Range, rangesWithin, remove, walk } from './AATree'\nimport * as arrayBinarySearch from './utils/binaryArraySearch'\nimport { correctItemSize } from './utils/correctItemSize'\nimport { loggerSystem, Log, LogLevel } from './loggerSystem'\n\nexport interface SizeRange {\n  startIndex: number\n  endIndex: number\n  size: number\n}\n\nexport type Data = readonly unknown[] | undefined\n\nfunction rangeIncludes(refRange: SizeRange) {\n  const { size, startIndex, endIndex } = refRange\n  return (range: Range<number>) => {\n    return range.start === startIndex && (range.end === endIndex || range.end === Infinity) && range.value === size\n  }\n}\n\nexport function insertRanges(sizeTree: AANode<number>, ranges: SizeRange[]) {\n  let syncStart = empty(sizeTree) ? 0 : Infinity\n\n  for (const range of ranges) {\n    const { size, startIndex, endIndex } = range\n    syncStart = Math.min(syncStart, startIndex)\n\n    if (empty(sizeTree)) {\n      sizeTree = insert(sizeTree, 0, size)\n      continue\n    }\n\n    // extend the range in both directions, so that we can get adjacent neighbours.\n    // if the previous / next ones have the same value as the one we are about to insert,\n    // we 'merge' them.\n    const overlappingRanges = rangesWithin(sizeTree, startIndex - 1, endIndex + 1)\n\n    if (overlappingRanges.some(rangeIncludes(range))) {\n      continue\n    }\n\n    let firstPassDone = false\n    let shouldInsert = false\n    for (const { start: rangeStart, end: rangeEnd, value: rangeValue } of overlappingRanges) {\n      // previous range\n      if (!firstPassDone) {\n        shouldInsert = rangeValue !== size\n        firstPassDone = true\n      } else {\n        // remove the range if it starts within the new range OR if\n        // it has the same value as it, in order to perform a merge\n        if (endIndex >= rangeStart || size === rangeValue) {\n          sizeTree = remove(sizeTree, rangeStart)\n        }\n      }\n\n      // next range\n      if (rangeEnd > endIndex && endIndex >= rangeStart) {\n        if (rangeValue !== size) {\n          sizeTree = insert(sizeTree, endIndex + 1, rangeValue)\n        }\n      }\n    }\n\n    if (shouldInsert) {\n      sizeTree = insert(sizeTree, startIndex, size)\n    }\n  }\n  return [sizeTree, syncStart] as const\n}\n\nexport interface OffsetPoint {\n  offset: number\n  size: number\n  index: number\n}\n\nexport interface SizeState {\n  sizeTree: AANode<number>\n  offsetTree: Array<OffsetPoint>\n  groupOffsetTree: AANode<number>\n  lastIndex: number\n  lastOffset: number\n  lastSize: number\n  groupIndices: number[]\n}\n\nexport function initialSizeState(): SizeState {\n  return {\n    offsetTree: [],\n    sizeTree: newTree<number>(),\n    groupOffsetTree: newTree<number>(),\n    lastIndex: 0,\n    lastOffset: 0,\n    lastSize: 0,\n    groupIndices: [],\n  }\n}\n\nexport function indexComparator({ index: itemIndex }: OffsetPoint, index: number) {\n  return index === itemIndex ? 0 : index < itemIndex ? -1 : 1\n}\n\nexport function offsetComparator({ offset: itemOffset }: OffsetPoint, offset: number) {\n  return offset === itemOffset ? 0 : offset < itemOffset ? -1 : 1\n}\n\nfunction offsetPointParser(point: OffsetPoint) {\n  return { index: point.index, value: point }\n}\n\nexport function rangesWithinOffsets(\n  tree: Array<OffsetPoint>,\n  startOffset: number,\n  endOffset: number,\n  minStartIndex = 0\n): Array<{\n  start: number\n  end: number\n  value: {\n    size: number\n    offset: number\n    index: number\n  }\n}> {\n  if (minStartIndex > 0) {\n    startOffset = Math.max(startOffset, arrayBinarySearch.findClosestSmallerOrEqual(tree, minStartIndex, indexComparator).offset)\n  }\n\n  return arrayToRanges(arrayBinarySearch.findRange(tree, startOffset, endOffset, offsetComparator), offsetPointParser)\n}\n\nfunction createOffsetTree(prevOffsetTree: OffsetPoint[], syncStart: number, sizeTree: AANode<number>) {\n  let offsetTree = prevOffsetTree\n  let prevIndex = 0\n  let prevSize = 0\n\n  let prevOffset = 0\n  let startIndex = 0\n\n  if (syncStart !== 0) {\n    startIndex = arrayBinarySearch.findIndexOfClosestSmallerOrEqual(offsetTree, syncStart - 1, indexComparator)\n    const offsetInfo = offsetTree[startIndex]\n    prevOffset = offsetInfo.offset\n    const kv = findMaxKeyValue(sizeTree, syncStart - 1)\n    prevIndex = kv[0]\n    prevSize = kv[1]!\n\n    if (offsetTree.length && offsetTree[startIndex].size === findMaxKeyValue(sizeTree, syncStart)[1]) {\n      startIndex -= 1\n    }\n\n    offsetTree = offsetTree.slice(0, startIndex + 1)\n  } else {\n    offsetTree = []\n  }\n\n  for (const { start: startIndex, value } of rangesWithin(sizeTree, syncStart, Infinity)) {\n    const aOffset = (startIndex - prevIndex) * prevSize + prevOffset\n    offsetTree.push({\n      offset: aOffset,\n      size: value,\n      index: startIndex,\n    })\n    prevIndex = startIndex\n    prevOffset = aOffset\n    prevSize = value\n  }\n\n  return {\n    offsetTree,\n    lastIndex: prevIndex,\n    lastOffset: prevOffset,\n    lastSize: prevSize,\n  }\n}\n\nexport function sizeStateReducer(state: SizeState, [ranges, groupIndices, log]: [SizeRange[], number[], Log]) {\n  if (ranges.length > 0) {\n    log('received item sizes', ranges, LogLevel.DEBUG)\n  }\n  const sizeTree = state.sizeTree\n  let newSizeTree: AANode<number> = sizeTree\n  let syncStart = 0\n\n  // We receive probe item results from a group probe,\n  // which should always pass an item and a group\n  // the results contain two ranges, which we consider to mean that groups and items have different size\n  if (groupIndices.length > 0 && empty(sizeTree) && ranges.length === 2) {\n    const groupSize = ranges[0].size\n    const itemSize = ranges[1].size\n    newSizeTree = groupIndices.reduce((tree, groupIndex) => {\n      return insert(insert(tree, groupIndex, groupSize), groupIndex + 1, itemSize)\n    }, newSizeTree)\n  } else {\n    ;[newSizeTree, syncStart] = insertRanges(newSizeTree, ranges)\n  }\n\n  if (newSizeTree === sizeTree) {\n    return state\n  }\n\n  const { offsetTree: newOffsetTree, lastIndex, lastSize, lastOffset } = createOffsetTree(state.offsetTree, syncStart, newSizeTree)\n\n  return {\n    sizeTree: newSizeTree,\n    offsetTree: newOffsetTree,\n    lastIndex,\n    lastOffset,\n    lastSize,\n    groupOffsetTree: groupIndices.reduce((tree, index) => {\n      return insert(tree, index, offsetOf(index, newOffsetTree))\n    }, newTree<number>()),\n    groupIndices,\n  }\n}\n\nexport function offsetOf(index: number, tree: Array<OffsetPoint>) {\n  if (tree.length === 0) {\n    return 0\n  }\n\n  const { offset, index: startIndex, size } = arrayBinarySearch.findClosestSmallerOrEqual(tree, index, indexComparator)\n  return size * (index - startIndex) + offset\n}\n\nexport function originalIndexFromItemIndex(itemIndex: number, sizes: SizeState) {\n  if (!hasGroups(sizes)) {\n    return itemIndex\n  }\n\n  let groupOffset = 0\n  while (sizes.groupIndices[groupOffset] <= itemIndex + groupOffset) {\n    groupOffset++\n  }\n  // we find the real item index, offsetting it by the number of group items before it\n  return itemIndex + groupOffset\n}\n\nexport function hasGroups(sizes: SizeState) {\n  return !empty(sizes.groupOffsetTree)\n}\n\ntype OptionalNumber = number | undefined\n\nconst SIZE_MAP = {\n  offsetHeight: 'height',\n  offsetWidth: 'width',\n} as const\n\n/** Calculates the height of `el`, which will be the `Item` element in the DOM. */\nexport type SizeFunction = (el: HTMLElement, field: 'offsetHeight' | 'offsetWidth') => number\n\nexport const sizeSystem = u.system(\n  ([{ log }]) => {\n    const sizeRanges = u.stream<SizeRange[]>()\n    const totalCount = u.stream<number>()\n    const statefulTotalCount = u.statefulStreamFromEmitter(totalCount, 0)\n    const unshiftWith = u.stream<number>()\n    const shiftWith = u.stream<number>()\n    const firstItemIndex = u.statefulStream(0)\n    const groupIndices = u.statefulStream([] as number[])\n    const fixedItemSize = u.statefulStream<OptionalNumber>(undefined)\n    const defaultItemSize = u.statefulStream<OptionalNumber>(undefined)\n    const itemSize = u.statefulStream<SizeFunction>((el, field) => correctItemSize(el, SIZE_MAP[field]))\n    const data = u.statefulStream<Data>(undefined)\n    const initial = initialSizeState()\n\n    const sizes = u.statefulStreamFromEmitter(\n      u.pipe(sizeRanges, u.withLatestFrom(groupIndices, log), u.scan(sizeStateReducer, initial), u.distinctUntilChanged()),\n      initial\n    )\n\n    u.connect(\n      u.pipe(\n        groupIndices,\n        u.filter((indexes) => indexes.length > 0),\n        u.withLatestFrom(sizes),\n        u.map(([groupIndices, sizes]) => {\n          const groupOffsetTree = groupIndices.reduce((tree, index, idx) => {\n            return insert(tree, index, offsetOf(index, sizes.offsetTree) || idx)\n          }, newTree<number>())\n\n          return {\n            ...sizes,\n            groupIndices,\n            groupOffsetTree,\n          }\n        })\n      ),\n      sizes\n    )\n\n    // decreasing the total count should remove any existing entries\n    // beyond the last index - do this by publishing the default size as a range over them.\n    u.connect(\n      u.pipe(\n        totalCount,\n        u.withLatestFrom(sizes),\n        u.filter(([totalCount, { lastIndex }]) => {\n          return totalCount < lastIndex\n        }),\n        u.map(([totalCount, { lastIndex, lastSize }]) => {\n          return [\n            {\n              startIndex: totalCount,\n              endIndex: lastIndex,\n              size: lastSize,\n            },\n          ] as SizeRange[]\n        })\n      ),\n      sizeRanges\n    )\n\n    u.connect(fixedItemSize, defaultItemSize)\n\n    const trackItemSizes = u.statefulStreamFromEmitter(\n      u.pipe(\n        fixedItemSize,\n        u.map((size) => size === undefined)\n      ),\n      true\n    )\n\n    u.connect(\n      u.pipe(\n        defaultItemSize,\n        u.filter((value) => {\n          return value !== undefined && empty(u.getValue(sizes).sizeTree)\n        }),\n        u.map((size) => [{ startIndex: 0, endIndex: 0, size }] as SizeRange[])\n      ),\n      sizeRanges\n    )\n\n    const listRefresh = u.streamFromEmitter(\n      u.pipe(\n        sizeRanges,\n        u.withLatestFrom(sizes),\n        u.scan(\n          ({ sizes: oldSizes }, [_, newSizes]) => {\n            return {\n              changed: newSizes !== oldSizes,\n              sizes: newSizes,\n            }\n          },\n          { changed: false, sizes: initial }\n        ),\n        u.map((value) => value.changed)\n      )\n    )\n\n    u.subscribe(\n      u.pipe(\n        firstItemIndex,\n        u.scan(\n          (prev, next) => {\n            return { diff: prev.prev - next, prev: next }\n          },\n          { diff: 0, prev: 0 }\n        ),\n        u.map((val) => val.diff)\n      ),\n      (offset) => {\n        if (offset > 0) {\n          u.publish(unshiftWith, offset)\n        } else if (offset < 0) {\n          u.publish(shiftWith, offset)\n        }\n      }\n    )\n\n    u.subscribe(u.pipe(firstItemIndex, u.withLatestFrom(log)), ([index, log]) => {\n      if (index < 0) {\n        log(\n          \"`firstItemIndex` prop should not be set to less than zero. If you don't know the total count, just use a very high value\",\n          { firstItemIndex },\n          LogLevel.ERROR\n        )\n      }\n    })\n\n    // Capture the current list top item before the sizes get refreshed\n    const beforeUnshiftWith = u.streamFromEmitter(unshiftWith)\n\n    u.connect(\n      u.pipe(\n        unshiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([unshiftWith, sizes]) => {\n          if (sizes.groupIndices.length > 0) {\n            throw new Error('Virtuoso: prepending items does not work with groups')\n          }\n\n          return walk(sizes.sizeTree).reduce(\n            (acc, { k: index, v: size }) => {\n              return {\n                ranges: [...acc.ranges, { startIndex: acc.prevIndex, endIndex: index + unshiftWith - 1, size: acc.prevSize }],\n                prevIndex: index + unshiftWith,\n                prevSize: size,\n              }\n            },\n            {\n              ranges: [] as SizeRange[],\n              prevIndex: 0,\n              prevSize: sizes.lastSize,\n            }\n          ).ranges\n        })\n      ),\n      sizeRanges\n    )\n\n    const shiftWithOffset = u.streamFromEmitter(\n      u.pipe(\n        shiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([shiftWith, { offsetTree }]) => {\n          const newFirstItemIndex = -shiftWith\n          return offsetOf(newFirstItemIndex, offsetTree)\n        })\n      )\n    )\n\n    u.connect(\n      u.pipe(\n        shiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([shiftWith, sizes]) => {\n          if (sizes.groupIndices.length > 0) {\n            throw new Error('Virtuoso: shifting items does not work with groups')\n          }\n\n          const newSizeTree = walk(sizes.sizeTree).reduce((acc, { k, v }) => {\n            return insert(acc, Math.max(0, k + shiftWith), v)\n          }, newTree<number>())\n\n          return {\n            ...sizes,\n            sizeTree: newSizeTree,\n            ...createOffsetTree(sizes.offsetTree, 0, newSizeTree),\n          }\n        })\n      ),\n      sizes\n    )\n\n    return {\n      // input\n      data,\n      totalCount,\n      sizeRanges,\n      groupIndices,\n      defaultItemSize,\n      fixedItemSize,\n      unshiftWith,\n      shiftWith,\n      shiftWithOffset,\n      beforeUnshiftWith,\n      firstItemIndex,\n\n      // output\n      sizes,\n      listRefresh,\n      statefulTotalCount,\n      trackItemSizes,\n      itemSize,\n    }\n  },\n  u.tup(loggerSystem),\n  { singleton: true }\n)\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport * as u from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { offsetOf, originalIndexFromItemIndex, sizeSystem } from './sizeSystem'\nimport { IndexLocationWithAlign } from './interfaces'\nimport { loggerSystem, LogLevel } from './loggerSystem'\n\nexport type IndexLocation = number | IndexLocationWithAlign\n\nconst SUPPORTS_SCROLL_TO_OPTIONS = typeof document !== 'undefined' && 'scrollBehavior' in document.documentElement.style\n\nexport function normalizeIndexLocation(location: IndexLocation) {\n  const result: IndexLocationWithAlign = typeof location === 'number' ? { index: location } : location\n\n  if (!result.align) {\n    result.align = 'start'\n  }\n  if (!result.behavior || !SUPPORTS_SCROLL_TO_OPTIONS) {\n    result.behavior = 'auto'\n  }\n  if (!result.offset) {\n    result.offset = 0\n  }\n  return result as Required<IndexLocationWithAlign>\n}\n\nexport const scrollToIndexSystem = u.system(\n  ([\n    { sizes, totalCount, listRefresh },\n    { scrollingInProgress, viewportHeight, scrollTo, smoothScrollTargetReached, headerHeight, footerHeight },\n    { log },\n  ]) => {\n    const scrollToIndex = u.stream<IndexLocation>()\n    const topListHeight = u.statefulStream(0)\n\n    let unsubscribeNextListRefresh: any = null\n    let cleartTimeoutRef: any = null\n    let unsubscribeListRefresh: any = null\n\n    function cleanup() {\n      if (unsubscribeNextListRefresh) {\n        unsubscribeNextListRefresh()\n        unsubscribeNextListRefresh = null\n      }\n\n      if (unsubscribeListRefresh) {\n        unsubscribeListRefresh()\n        unsubscribeListRefresh = null\n      }\n\n      if (cleartTimeoutRef) {\n        clearTimeout(cleartTimeoutRef)\n        cleartTimeoutRef = null\n      }\n      u.publish(scrollingInProgress, false)\n    }\n\n    u.connect(\n      u.pipe(\n        scrollToIndex,\n        u.withLatestFrom(sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight, log),\n        u.map(([location, sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight, log]) => {\n          const normalLocation = normalizeIndexLocation(location)\n          const { align, behavior, offset } = normalLocation\n          const lastIndex = totalCount - 1\n          let index = normalLocation.index\n          if (index === 'LAST') {\n            index = lastIndex\n          }\n\n          index = originalIndexFromItemIndex(index, sizes)\n\n          index = Math.max(0, index, Math.min(lastIndex, index))\n\n          let top = offsetOf(index, sizes.offsetTree) + headerHeight\n          if (align === 'end') {\n            top = top - viewportHeight + findMaxKeyValue(sizes.sizeTree, index)[1]!\n            if (index === lastIndex) {\n              top += footerHeight\n            }\n          } else if (align === 'center') {\n            top = top - viewportHeight / 2 + findMaxKeyValue(sizes.sizeTree, index)[1]! / 2\n          } else {\n            top -= topListHeight\n          }\n\n          if (offset) {\n            top += offset\n          }\n\n          const retry = (listChanged: boolean) => {\n            cleanup()\n            if (listChanged) {\n              log('retrying to scroll to', { location }, LogLevel.DEBUG)\n              u.publish(scrollToIndex, location)\n            } else {\n              log('list did not change, scroll successful', {}, LogLevel.DEBUG)\n            }\n          }\n\n          cleanup()\n\n          if (behavior === 'smooth') {\n            let listChanged = false\n            unsubscribeListRefresh = u.subscribe(listRefresh, (changed) => {\n              listChanged = listChanged || changed\n            })\n\n            unsubscribeNextListRefresh = u.handleNext(smoothScrollTargetReached, () => {\n              retry(listChanged)\n            })\n          } else {\n            unsubscribeNextListRefresh = u.handleNext(u.pipe(listRefresh, watchChangesFor(50)), retry)\n          }\n\n          // if the scroll jump is too small, the list won't get rerendered.\n          // clean this listener\n          cleartTimeoutRef = setTimeout(() => {\n            cleanup()\n          }, 1200)\n\n          u.publish(scrollingInProgress, true)\n          log('scrolling from index to', { index, top, behavior }, LogLevel.DEBUG)\n          return { top, behavior }\n        })\n      ),\n      scrollTo\n    )\n\n    return {\n      scrollToIndex,\n      topListHeight,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, loggerSystem),\n  { singleton: true }\n)\n\nfunction watchChangesFor(limit: number): u.Operator<boolean> {\n  return (done) => {\n    const timeoutRef = setTimeout(() => {\n      done(false)\n    }, limit)\n    return (value) => {\n      if (value) {\n        done(true)\n        clearTimeout(timeoutRef)\n      }\n    }\n  }\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { UP, DOWN, ScrollDirection } from './stateFlagsSystem'\nimport { tupleComparator } from './comparators'\n\nexport type NumberTuple = [number, number]\nexport type Overscan = number | { main: number; reverse: number }\nexport const TOP = 'top' as const\nexport const BOTTOM = 'bottom' as const\nexport const NONE = 'none' as const\nexport type ListEnd = typeof TOP | typeof BOTTOM\nexport type ViewportIncrease = number | { [k in ListEnd]?: number }\nexport type ChangeDirection = typeof UP | typeof DOWN | typeof NONE\n\nexport function getOverscan(overscan: Overscan, end: ListEnd, direction: ScrollDirection) {\n  if (typeof overscan === 'number') {\n    return (direction === UP && end === TOP) || (direction === DOWN && end === BOTTOM) ? overscan : 0\n  } else {\n    if (direction === UP) {\n      return end === TOP ? overscan.main : overscan.reverse\n    } else {\n      return end === BOTTOM ? overscan.main : overscan.reverse\n    }\n  }\n}\n\nfunction getViewportIncrease(value: ViewportIncrease, end: ListEnd) {\n  return typeof value === 'number' ? value : value[end] || 0\n}\n\nexport const sizeRangeSystem = u.system(\n  ([{ scrollTop, viewportHeight, deviation, headerHeight }]) => {\n    const listBoundary = u.stream<NumberTuple>()\n    const topListHeight = u.statefulStream(0)\n    const fixedHeaderHeight = u.statefulStream(0)\n    const increaseViewportBy = u.statefulStream<ViewportIncrease>(0)\n    const overscan = u.statefulStream<Overscan>(0)\n\n    const visibleRange = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(\n          u.duc(scrollTop),\n          u.duc(viewportHeight),\n          u.duc(headerHeight),\n          u.duc(listBoundary, tupleComparator),\n          u.duc(overscan),\n          u.duc(topListHeight),\n          u.duc(fixedHeaderHeight),\n          u.duc(deviation),\n          u.duc(increaseViewportBy)\n        ),\n        u.map(\n          ([\n            scrollTop,\n            viewportHeight,\n            headerHeight,\n            [listTop, listBottom],\n            overscan,\n            topListHeight,\n            fixedHeaderHeight,\n            deviation,\n            increaseViewportBy,\n          ]) => {\n            const top = scrollTop - deviation\n            const stickyHeaderHeight = topListHeight + fixedHeaderHeight\n            const headerVisible = Math.max(headerHeight - top, 0)\n            let direction: ChangeDirection = NONE\n            const topViewportAddition = getViewportIncrease(increaseViewportBy, TOP)\n            const bottomViewportAddition = getViewportIncrease(increaseViewportBy, BOTTOM)\n\n            listTop -= deviation\n            listTop += headerHeight\n            listBottom += headerHeight\n            listBottom -= deviation\n\n            if (listTop > scrollTop + stickyHeaderHeight - topViewportAddition) {\n              direction = UP\n            }\n\n            if (listBottom < scrollTop - headerVisible + viewportHeight + bottomViewportAddition) {\n              direction = DOWN\n            }\n\n            if (direction !== NONE) {\n              return [\n                Math.max(top - headerHeight - getOverscan(overscan, TOP, direction) - topViewportAddition, 0),\n                top -\n                  headerVisible -\n                  fixedHeaderHeight +\n                  viewportHeight +\n                  getOverscan(overscan, BOTTOM, direction) +\n                  bottomViewportAddition,\n              ] as NumberTuple\n            }\n\n            return null\n          }\n        ),\n        u.filter((value) => value != null),\n        u.distinctUntilChanged(tupleComparator as any)\n      ),\n      [0, 0]\n    ) as unknown as u.StatefulStream<NumberTuple>\n\n    return {\n      // input\n      listBoundary,\n      overscan,\n      topListHeight,\n      fixedHeaderHeight,\n      increaseViewportBy,\n\n      // output\n      visibleRange,\n    }\n  },\n  u.tup(domIOSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { WindowViewportInfo } from './interfaces'\n\nexport const windowScrollerSystem = u.system(([{ scrollTo, scrollContainerState }]) => {\n  const windowScrollContainerState = u.stream<[number, number]>()\n  const windowViewportRect = u.stream<WindowViewportInfo>()\n  const windowScrollTo = u.stream<ScrollToOptions>()\n  const useWindowScroll = u.statefulStream(false)\n  const customScrollParent = u.statefulStream<HTMLElement | undefined>(undefined)\n\n  u.connect(\n    u.pipe(\n      u.combineLatest(windowScrollContainerState, windowViewportRect),\n      u.map(([[windowScrollTop, scrollHeight], { offsetTop }]) => {\n        return [Math.max(0, windowScrollTop - offsetTop), scrollHeight]\n      })\n    ),\n    scrollContainerState\n  )\n\n  u.connect(\n    u.pipe(\n      scrollTo,\n      u.withLatestFrom(windowViewportRect),\n      u.map(([scrollTo, { offsetTop }]) => {\n        return {\n          ...scrollTo,\n          top: scrollTo.top! + offsetTop,\n        }\n      })\n    ),\n    windowScrollTo\n  )\n\n  return {\n    // config\n    useWindowScroll,\n    customScrollParent,\n\n    // input\n    windowScrollContainerState,\n    windowViewportRect,\n\n    // signals\n    windowScrollTo,\n  }\n}, u.tup(domIOSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { rangeComparator, tupleComparator } from './comparators'\nimport { domIOSystem } from './domIOSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollSeekSystem } from './scrollSeekSystem'\nimport { IndexLocation, normalizeIndexLocation } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { windowScrollerSystem } from './windowScrollerSystem'\n\nexport interface ElementDimensions {\n  width: number\n  height: number\n}\n\nexport interface GridItem {\n  index: number\n}\n\nexport interface GridLayout {\n  top: number\n  bottom: number\n}\n\nexport interface GridState extends GridLayout {\n  items: GridItem[]\n  offsetTop: number\n  offsetBottom: number\n  itemHeight: number\n  itemWidth: number\n}\n\nconst INITIAL_GRID_STATE: GridState = {\n  items: [],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0,\n}\n\nconst PROBE_GRID_STATE: GridState = {\n  items: [{ index: 0 }],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0,\n}\n\nconst { round, ceil, floor, min, max } = Math\n\nfunction buildItems(startIndex: number, endIndex: number) {\n  return Array.from({ length: endIndex - startIndex + 1 }).map((_, i) => ({ index: i + startIndex } as GridItem))\n}\nexport const gridSystem = u.system(\n  ([\n    { overscan, visibleRange, listBoundary },\n    { scrollTop, viewportHeight, scrollBy, scrollTo, smoothScrollTargetReached, scrollContainerState },\n    stateFlags,\n    scrollSeek,\n    { propsReady, didMount },\n    { windowViewportRect, windowScrollTo, useWindowScroll, customScrollParent, windowScrollContainerState },\n  ]) => {\n    const totalCount = u.statefulStream(0)\n    const initialItemCount = u.statefulStream(0)\n    const gridState = u.statefulStream(INITIAL_GRID_STATE)\n    const viewportDimensions = u.statefulStream<ElementDimensions>({ height: 0, width: 0 })\n    const itemDimensions = u.statefulStream<ElementDimensions>({ height: 0, width: 0 })\n    const scrollToIndex = u.stream<IndexLocation>()\n    const scrollHeight = u.stream<number>()\n    const deviation = u.statefulStream(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialItemCount),\n        u.filter(([, count]) => count !== 0),\n        u.map(([, count]) => {\n          return {\n            items: buildItems(0, count - 1),\n            top: 0,\n            bottom: 0,\n            offsetBottom: 0,\n            offsetTop: 0,\n            itemHeight: 0,\n            itemWidth: 0,\n          }\n        })\n      ),\n      gridState\n    )\n\n    u.connect(\n      u.pipe(\n        u.combineLatest(\n          u.duc(totalCount),\n          visibleRange,\n          u.duc(itemDimensions, (prev, next) => prev && prev.width === next.width && prev.height === next.height)\n        ),\n        u.withLatestFrom(viewportDimensions),\n        u.map(([[totalCount, [startOffset, endOffset], item], viewport]) => {\n          const { height: itemHeight, width: itemWidth } = item\n          const { width: viewportWidth } = viewport\n\n          if (totalCount === 0 || viewportWidth === 0) {\n            return INITIAL_GRID_STATE\n          }\n\n          if (itemWidth === 0) {\n            return PROBE_GRID_STATE\n          }\n\n          const perRow = itemsPerRow(viewportWidth, itemWidth)\n\n          let startIndex = perRow * floor(startOffset / itemHeight)\n          let endIndex = perRow * ceil(endOffset / itemHeight) - 1\n          endIndex = min(totalCount - 1, endIndex)\n          startIndex = min(endIndex, max(0, startIndex))\n\n          const items = buildItems(startIndex, endIndex)\n          const { top, bottom } = gridLayout(viewport, item, items)\n          const totalHeight = ceil(totalCount / perRow) * itemHeight\n          const offsetBottom = totalHeight - bottom\n\n          return { items, offsetTop: top, offsetBottom, top, bottom, itemHeight, itemWidth } as GridState\n        })\n      ),\n      gridState\n    )\n\n    u.connect(\n      u.pipe(\n        viewportDimensions,\n        u.map(({ height }) => height)\n      ),\n      viewportHeight\n    )\n\n    u.connect(\n      u.pipe(\n        u.combineLatest(viewportDimensions, itemDimensions, gridState),\n        u.map(([viewportDimensions, item, { items }]) => {\n          const { top, bottom } = gridLayout(viewportDimensions, item, items)\n\n          return [top, bottom] as [number, number]\n        }),\n        u.distinctUntilChanged(tupleComparator)\n      ),\n      listBoundary\n    )\n\n    const endReached = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => items.length > 0),\n        u.withLatestFrom(totalCount),\n        u.filter(([{ items }, totalCount]) => items[items.length - 1].index === totalCount - 1),\n        u.map(([, totalCount]) => totalCount - 1),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const startReached = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => {\n          return items.length > 0 && items[0].index === 0\n        }),\n        u.mapTo(0),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const rangeChanged = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => items.length > 0),\n        u.map(({ items }) => {\n          return {\n            startIndex: items[0].index,\n            endIndex: items[items.length - 1].index,\n          }\n        }),\n        u.distinctUntilChanged(rangeComparator)\n      )\n    )\n\n    u.connect(rangeChanged, scrollSeek.scrollSeekRangeChanged)\n\n    u.connect(\n      u.pipe(\n        scrollToIndex,\n        u.withLatestFrom(viewportDimensions, itemDimensions, totalCount),\n        u.map(([location, viewport, item, totalCount]) => {\n          const normalLocation = normalizeIndexLocation(location)\n          const { align, behavior, offset } = normalLocation\n          let index = normalLocation.index\n          if (index === 'LAST') {\n            index = totalCount - 1\n          }\n\n          index = max(0, index, min(totalCount - 1, index))\n\n          let top = itemTop(viewport, item, index)\n\n          if (align === 'end') {\n            top = round(top - viewport.height + item.height)\n          } else if (align === 'center') {\n            top = round(top - viewport.height / 2 + item.height / 2)\n          }\n\n          if (offset) {\n            top += offset\n          }\n\n          return { top, behavior }\n        })\n      ),\n      scrollTo\n    )\n\n    const totalListHeight = u.statefulStreamFromEmitter(\n      u.pipe(\n        gridState,\n        u.map((gridState) => {\n          return gridState.offsetBottom + gridState.bottom\n        })\n      ),\n      0\n    )\n\n    u.connect(\n      u.pipe(\n        windowViewportRect,\n        u.map((viewportInfo) => ({ width: viewportInfo.visibleWidth, height: viewportInfo.visibleHeight }))\n      ),\n      viewportDimensions\n    )\n\n    return {\n      // input\n      totalCount,\n      viewportDimensions,\n      itemDimensions,\n      scrollTop,\n      scrollHeight,\n      overscan,\n      scrollBy,\n      scrollTo,\n      scrollToIndex,\n      smoothScrollTargetReached,\n      windowViewportRect,\n      windowScrollTo,\n      useWindowScroll,\n      customScrollParent,\n      windowScrollContainerState,\n      deviation,\n      scrollContainerState,\n      initialItemCount,\n      ...scrollSeek,\n\n      // output\n      gridState,\n      totalListHeight,\n      ...stateFlags,\n      startReached,\n      endReached,\n      rangeChanged,\n      propsReady,\n    }\n  },\n  u.tup(sizeRangeSystem, domIOSystem, stateFlagsSystem, scrollSeekSystem, propsReadySystem, windowScrollerSystem)\n)\n\nfunction gridLayout(viewport: ElementDimensions, item: ElementDimensions, items: GridItem[]): GridLayout {\n  const { height: itemHeight } = item\n  if (itemHeight === undefined || items.length === 0) {\n    return { top: 0, bottom: 0 }\n  }\n\n  const top = itemTop(viewport, item, items[0].index)\n  const bottom = itemTop(viewport, item, items[items.length - 1].index) + itemHeight\n  return { top, bottom }\n}\n\nfunction itemTop(viewport: ElementDimensions, item: ElementDimensions, index: number) {\n  const perRow = itemsPerRow(viewport.width, item.width)\n  return floor(index / perRow) * item.height\n}\n\nfunction itemsPerRow(viewportWidth: number, itemWidth: number) {\n  return max(1, floor(viewportWidth / itemWidth))\n}\n","import { useRef } from 'react'\n\nexport type CallbackRefParam = HTMLElement | null\n\nexport function useSizeWithElRef(callback: (e: HTMLElement) => void, enabled = true) {\n  const ref = useRef<CallbackRefParam>(null)\n\n  let callbackRef = (_el: CallbackRefParam) => {\n    void 0\n  }\n\n  if (typeof ResizeObserver !== 'undefined') {\n    const observer = new ResizeObserver((entries: ResizeObserverEntry[]) => {\n      const element = entries[0].target as HTMLElement\n      if (element.offsetParent !== null) {\n        callback(element)\n      }\n    })\n\n    callbackRef = (elRef: CallbackRefParam) => {\n      if (elRef && enabled) {\n        observer.observe(elRef)\n        ref.current = elRef\n      } else {\n        if (ref.current) {\n          observer.unobserve(ref.current)\n        }\n        ref.current = null\n      }\n    }\n  }\n\n  return { ref, callbackRef }\n}\n\nexport default function useSize(callback: (e: HTMLElement) => void, enabled = true) {\n  return useSizeWithElRef(callback, enabled).callbackRef\n}\n","import { useEffect, useRef, useCallback } from 'react'\nimport { useSizeWithElRef } from './useSize'\nimport { WindowViewportInfo } from '../interfaces'\n\nexport default function useWindowViewportRectRef(callback: (info: WindowViewportInfo) => void, customScrollParent?: HTMLElement) {\n  const viewportInfo = useRef<WindowViewportInfo | null>(null)\n\n  const calculateInfo = useCallback(\n    (element: HTMLElement | null) => {\n      if (element === null) {\n        return\n      }\n      const rect = element.getBoundingClientRect()\n      const visibleWidth = rect.width\n      let visibleHeight: number, offsetTop: number\n\n      if (customScrollParent) {\n        const customScrollParentRect = customScrollParent.getBoundingClientRect()\n        const deltaTop = rect.top - customScrollParentRect.top\n\n        visibleHeight = customScrollParentRect.height - Math.max(0, deltaTop)\n        offsetTop = deltaTop + customScrollParent.scrollTop\n      } else {\n        visibleHeight = window.innerHeight - Math.max(0, rect.top)\n        offsetTop = rect.top + window.pageYOffset\n      }\n\n      viewportInfo.current = {\n        offsetTop,\n        visibleHeight,\n        visibleWidth,\n      }\n\n      callback(viewportInfo.current)\n    },\n    [callback, customScrollParent]\n  )\n\n  const { callbackRef, ref } = useSizeWithElRef(calculateInfo)\n\n  const scrollAndResizeEventHandler = useCallback(() => {\n    calculateInfo(ref.current)\n  }, [calculateInfo, ref])\n\n  useEffect(() => {\n    if (customScrollParent) {\n      customScrollParent.addEventListener('scroll', scrollAndResizeEventHandler)\n      const observer = new ResizeObserver(scrollAndResizeEventHandler)\n      observer.observe(customScrollParent)\n      return () => {\n        customScrollParent.removeEventListener('scroll', scrollAndResizeEventHandler)\n        observer.unobserve(customScrollParent)\n      }\n    } else {\n      window.addEventListener('scroll', scrollAndResizeEventHandler)\n      window.addEventListener('resize', scrollAndResizeEventHandler)\n      return () => {\n        window.removeEventListener('scroll', scrollAndResizeEventHandler)\n        window.removeEventListener('resize', scrollAndResizeEventHandler)\n      }\n    }\n  }, [scrollAndResizeEventHandler, customScrollParent])\n\n  return callbackRef\n}\n","import { useEffect, useLayoutEffect } from 'react'\n\nconst useIsomorphicLayoutEffect = typeof document !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import { Log, LogLevel } from '../loggerSystem'\nimport { SizeFunction, SizeRange } from '../sizeSystem'\nimport useSize from './useSize'\n\nexport default function useChangedListContentsSizes(\n  callback: (ranges: SizeRange[]) => void,\n  itemSize: SizeFunction,\n  enabled: boolean,\n  scrollContainerStateCallback: (state: [number, number]) => void,\n  log: Log,\n  customScrollParent?: HTMLElement\n) {\n  return useSize((el: HTMLElement) => {\n    const ranges = getChangedChildSizes(el.children, itemSize, 'offsetHeight', log)\n    let scrollableElement = el.parentElement!\n\n    while (!scrollableElement.dataset['virtuosoScroller']) {\n      scrollableElement = scrollableElement.parentElement!\n    }\n\n    const scrollTop = customScrollParent\n      ? customScrollParent.scrollTop\n      : // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      (scrollableElement.firstElementChild! as HTMLDivElement).dataset['viewportType']! === 'window'\n      ? window.pageYOffset || document.documentElement.scrollTop\n      : scrollableElement.scrollTop\n\n    customScrollParent\n      ? scrollContainerStateCallback([Math.max(scrollTop, 0), customScrollParent.scrollHeight])\n      : scrollContainerStateCallback([Math.max(scrollTop, 0), scrollableElement.scrollHeight])\n    if (ranges !== null) {\n      callback(ranges)\n    }\n  }, enabled)\n}\n\nfunction getChangedChildSizes(children: HTMLCollection, itemSize: SizeFunction, field: 'offsetHeight' | 'offsetWidth', log: Log) {\n  const length = children.length\n\n  if (length === 0) {\n    return null\n  }\n\n  const results: SizeRange[] = []\n\n  for (let i = 0; i < length; i++) {\n    const child = children.item(i) as HTMLElement\n\n    if (!child || child.dataset.index === undefined) {\n      continue\n    }\n\n    const index = parseInt(child.dataset.index!)\n    const knownSize = parseFloat(child.dataset.knownSize!)\n    const size = itemSize(child, field)\n\n    if (size === 0) {\n      log('Zero-sized element, this should not happen', { child }, LogLevel.ERROR)\n    }\n\n    if (size === knownSize) {\n      continue\n    }\n\n    const lastResult = results[results.length - 1]\n    if (results.length === 0 || lastResult.size !== size || lastResult.endIndex !== index - 1) {\n      results.push({ startIndex: index, endIndex: index, size })\n    } else {\n      results[results.length - 1].endIndex++\n    }\n  }\n\n  return results\n}\n","import { useRef, useCallback, useEffect } from 'react'\nimport * as u from '@virtuoso.dev/urx'\nimport { correctItemSize } from '../utils/correctItemSize'\n\nexport type ScrollerRef = Window | HTMLElement | null\n\nfunction approximatelyEqual(num1: number, num2: number) {\n  return Math.abs(num1 - num2) < 1.01\n}\n\nexport default function useScrollTop(\n  scrollContainerStateCallback: (state: [number, number]) => void,\n  smoothScrollTargetReached: (yes: true) => void,\n  scrollerElement: any,\n  scrollerRefCallback: (ref: ScrollerRef) => void = u.noop,\n  customScrollParent?: HTMLElement\n) {\n  const scrollerRef = useRef<HTMLElement | null | Window>(null)\n  const scrollTopTarget = useRef<any>(null)\n  const timeoutRef = useRef<any>(null)\n\n  const handler = useCallback(\n    (ev: Event) => {\n      const el = ev.target as HTMLElement\n      const scrollTop =\n        (el as any) === window || (el as any) === document ? window.pageYOffset || document.documentElement.scrollTop : el.scrollTop\n      const scrollHeight = (el as any) === window ? document.documentElement.scrollHeight : el.scrollHeight\n\n      scrollContainerStateCallback([Math.max(scrollTop, 0), scrollHeight])\n\n      if (scrollTopTarget.current !== null) {\n        if (scrollTop === scrollTopTarget.current || scrollTop <= 0 || scrollTop === el.scrollHeight - correctItemSize(el, 'height')) {\n          scrollTopTarget.current = null\n          smoothScrollTargetReached(true)\n          if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current)\n            timeoutRef.current = null\n          }\n        }\n      }\n    },\n    [scrollContainerStateCallback, smoothScrollTargetReached]\n  )\n\n  useEffect(() => {\n    const localRef = customScrollParent ? customScrollParent : scrollerRef.current!\n\n    scrollerRefCallback(customScrollParent ? customScrollParent : scrollerRef.current)\n    handler({ target: localRef } as unknown as Event)\n    localRef.addEventListener('scroll', handler, { passive: true })\n\n    return () => {\n      scrollerRefCallback(null)\n      localRef.removeEventListener('scroll', handler)\n    }\n  }, [scrollerRef, handler, scrollerElement, scrollerRefCallback, customScrollParent])\n\n  function scrollToCallback(location: ScrollToOptions) {\n    const scrollerElement = scrollerRef.current\n    if (!scrollerElement || ('offsetHeight' in scrollerElement && scrollerElement.offsetHeight === 0)) {\n      return\n    }\n\n    const isSmooth = location.behavior === 'smooth'\n\n    let offsetHeight: number\n    let scrollHeight: number\n    let scrollTop: number\n\n    if (scrollerElement === window) {\n      // this is not a mistake\n      scrollHeight = Math.max(correctItemSize(document.documentElement, 'height'), document.documentElement.scrollHeight)\n      offsetHeight = window.innerHeight\n      scrollTop = document.documentElement.scrollTop\n    } else {\n      scrollHeight = (scrollerElement as HTMLElement).scrollHeight\n      offsetHeight = correctItemSize(scrollerElement as HTMLElement, 'height')\n      scrollTop = (scrollerElement as HTMLElement).scrollTop\n    }\n\n    const maxScrollTop = scrollHeight - offsetHeight\n    location.top = Math.ceil(Math.max(Math.min(maxScrollTop, location.top!), 0))\n\n    // avoid system hanging because the DOM never called back\n    // with the scrollTop\n    // scroller is already at this location\n    if (approximatelyEqual(offsetHeight, scrollHeight) || location.top === scrollTop) {\n      scrollContainerStateCallback([scrollTop, scrollHeight])\n      if (isSmooth) {\n        smoothScrollTargetReached(true)\n      }\n      return\n    }\n\n    if (isSmooth) {\n      scrollTopTarget.current = location.top\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current)\n      }\n\n      timeoutRef.current = setTimeout(() => {\n        timeoutRef.current = null\n        scrollTopTarget.current = null\n        smoothScrollTargetReached(true)\n      }, 1000)\n    } else {\n      scrollTopTarget.current = null\n    }\n\n    scrollerElement.scrollTo(location)\n  }\n\n  function scrollByCallback(location: ScrollToOptions) {\n    if (scrollTopTarget.current === null) {\n      scrollerRef.current!.scrollBy(location)\n    }\n  }\n\n  return { scrollerRef, scrollByCallback, scrollToCallback }\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { empty } from './AATree'\nimport { sizeSystem } from './sizeSystem'\nimport { domIOSystem } from './domIOSystem'\nimport { IndexLocation, scrollToIndexSystem } from './scrollToIndexSystem'\nimport { propsReadySystem } from './propsReadySystem'\n\nexport function getInitialTopMostItemIndexNumber(location: IndexLocation, totalCount: number): number {\n  const lastIndex = totalCount - 1\n  const index = typeof location === 'number' ? location : location.index === 'LAST' ? lastIndex : location.index\n  return index\n}\n\nexport const initialTopMostItemIndexSystem = u.system(\n  ([{ sizes, listRefresh, defaultItemSize }, { scrollTop }, { scrollToIndex }, { didMount }]) => {\n    const scrolledToInitialItem = u.statefulStream(true)\n    const initialTopMostItemIndex = u.statefulStream<IndexLocation>(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialTopMostItemIndex),\n        u.filter(([_, location]) => !!location),\n        u.mapTo(false)\n      ),\n      scrolledToInitialItem\n    )\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(listRefresh, didMount),\n        u.withLatestFrom(scrolledToInitialItem, sizes, defaultItemSize),\n        u.filter(([[, didMount], scrolledToInitialItem, { sizeTree }, defaultItemSize]) => {\n          return didMount && (!empty(sizeTree) || defaultItemSize !== undefined) && !scrolledToInitialItem\n        }),\n        u.withLatestFrom(initialTopMostItemIndex)\n      ),\n      ([, initialTopMostItemIndex]) => {\n        setTimeout(() => {\n          u.handleNext(scrollTop, () => {\n            u.publish(scrolledToInitialItem, true)\n          })\n          u.publish(scrollToIndex, initialTopMostItemIndex)\n        })\n      }\n    )\n\n    return {\n      scrolledToInitialItem,\n      initialTopMostItemIndex,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, scrollToIndexSystem, propsReadySystem),\n  { singleton: true }\n)\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport * as u from '@virtuoso.dev/urx'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { FollowOutput, FollowOutputScalarType } from './interfaces'\nimport { propsReadySystem } from './propsReadySystem'\nimport { loggerSystem, LogLevel } from './loggerSystem'\nimport { domIOSystem } from './domIOSystem'\n\nfunction normalizeFollowOutput(follow: FollowOutputScalarType): FollowOutputScalarType {\n  if (!follow) {\n    return false\n  }\n  return follow === 'smooth' ? 'smooth' : 'auto'\n}\n\nconst behaviorFromFollowOutput = (follow: FollowOutput, isAtBottom: boolean) => {\n  if (typeof follow === 'function') {\n    return normalizeFollowOutput(follow(isAtBottom))\n  }\n  return isAtBottom && normalizeFollowOutput(follow)\n}\n\nexport const followOutputSystem = u.system(\n  ([\n    { totalCount, listRefresh },\n    { isAtBottom, atBottomState },\n    { scrollToIndex },\n    { scrolledToInitialItem },\n    { propsReady, didMount },\n    { log },\n    { scrollingInProgress },\n  ]) => {\n    const followOutput = u.statefulStream<FollowOutput>(false)\n    let pendingScrollHandle: any = null\n\n    function scrollToBottom(followOutputBehavior: FollowOutputScalarType) {\n      u.publish(scrollToIndex, {\n        index: 'LAST',\n        align: 'end',\n        behavior: followOutputBehavior,\n      })\n    }\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.pipe(u.duc(totalCount), u.skip(1)), didMount),\n        u.withLatestFrom(u.duc(followOutput), isAtBottom, scrolledToInitialItem, scrollingInProgress),\n        u.map(([[totalCount, didMount], followOutput, isAtBottom, scrolledToInitialItem, scrollingInProgress]) => {\n          let shouldFollow = didMount && scrolledToInitialItem\n          let followOutputBehavior: FollowOutputScalarType = 'auto'\n\n          if (shouldFollow) {\n            // if scrolling to index is in progress,\n            // assume that a previous followOutput response is going\n            followOutputBehavior = behaviorFromFollowOutput(followOutput, isAtBottom || scrollingInProgress)\n            shouldFollow = shouldFollow && !!followOutputBehavior\n          }\n\n          return { totalCount, shouldFollow, followOutputBehavior }\n        }),\n        u.filter(({ shouldFollow }) => shouldFollow)\n      ),\n      ({ totalCount, followOutputBehavior }) => {\n        if (pendingScrollHandle) {\n          pendingScrollHandle()\n          pendingScrollHandle = null\n        }\n\n        pendingScrollHandle = u.handleNext(listRefresh, () => {\n          u.getValue(log)('following output to ', { totalCount }, LogLevel.DEBUG)\n          scrollToBottom(followOutputBehavior)\n          pendingScrollHandle = null\n        })\n      }\n    )\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.duc(followOutput), totalCount, propsReady),\n        u.filter(([follow, , ready]) => follow && ready),\n        u.scan(\n          ({ value }, [, next]) => {\n            return { refreshed: value === next, value: next }\n          },\n          { refreshed: false, value: 0 }\n        ),\n        u.filter(({ refreshed }) => refreshed),\n        u.withLatestFrom(followOutput, totalCount)\n      ),\n      ([, followOutput]) => {\n        const cancel = u.handleNext(atBottomState, (state) => {\n          if (followOutput && !state.atBottom && state.notAtBottomBecause === 'SIZE_INCREASED' && !pendingScrollHandle) {\n            u.getValue(log)('scrolling to bottom due to increased size', {}, LogLevel.DEBUG)\n            scrollToBottom('auto')\n          }\n        })\n        setTimeout(cancel, 100)\n      }\n    )\n\n    u.subscribe(u.combineLatest(u.duc(followOutput), atBottomState), ([followOutput, state]) => {\n      if (followOutput && !state.atBottom && state.notAtBottomBecause === 'VIEWPORT_HEIGHT_DECREASING') {\n        scrollToBottom('auto')\n      }\n    })\n\n    return { followOutput }\n  },\n  u.tup(sizeSystem, stateFlagsSystem, scrollToIndexSystem, initialTopMostItemIndexSystem, propsReadySystem, loggerSystem, domIOSystem)\n)\n","import {\n  combineLatest,\n  connect,\n  distinctUntilChanged,\n  system,\n  filter,\n  map,\n  pipe,\n  prop,\n  stream,\n  streamFromEmitter,\n  tup,\n} from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { sizeSystem, hasGroups } from './sizeSystem'\nexport interface GroupIndexesAndCount {\n  totalCount: number\n  groupIndices: number[]\n}\n\nexport function groupCountsToIndicesAndCount(counts: number[]) {\n  return counts.reduce(\n    (acc, groupCount) => {\n      acc.groupIndices.push(acc.totalCount)\n      acc.totalCount += groupCount + 1\n      return acc\n    },\n    {\n      totalCount: 0,\n      groupIndices: [],\n    } as GroupIndexesAndCount\n  )\n}\n\nexport const groupedListSystem = system(([{ totalCount, groupIndices, sizes }, { scrollTop, headerHeight }]) => {\n  const groupCounts = stream<number[]>()\n  const topItemsIndexes = stream<[number]>()\n  const groupIndicesAndCount = streamFromEmitter(pipe(groupCounts, map(groupCountsToIndicesAndCount)))\n  connect(pipe(groupIndicesAndCount, map(prop('totalCount'))), totalCount)\n  connect(pipe(groupIndicesAndCount, map(prop('groupIndices'))), groupIndices)\n\n  connect(\n    pipe(\n      combineLatest(scrollTop, sizes, headerHeight),\n      filter(([_, sizes]) => hasGroups(sizes)),\n      map(([scrollTop, state, headerHeight]) => findMaxKeyValue(state.groupOffsetTree, Math.max(scrollTop - headerHeight, 0), 'v')[0]),\n      distinctUntilChanged(),\n      map((index) => [index])\n    ),\n    topItemsIndexes\n  )\n\n  return { groupCounts, topItemsIndexes }\n}, tup(sizeSystem, domIOSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { empty, findMaxKeyValue, Range, rangesWithin } from './AATree'\nimport { groupedListSystem } from './groupedListSystem'\nimport { getInitialTopMostItemIndexNumber, initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { Item, ListItem, ListRange } from './interfaces'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { Data, originalIndexFromItemIndex, SizeState, sizeSystem, hasGroups, rangesWithinOffsets } from './sizeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { rangeComparator, tupleComparator } from './comparators'\n\nexport type ListItems = ListItem<unknown>[]\nexport interface TopListState {\n  items: ListItems\n  listHeight: number\n}\n\nexport interface ListState {\n  items: ListItems\n  topItems: ListItems\n  topListHeight: number\n  offsetTop: number\n  offsetBottom: number\n  top: number\n  bottom: number\n  totalCount: number\n}\n\nfunction probeItemSet(index: number, sizes: SizeState, data: Data) {\n  if (hasGroups(sizes)) {\n    const itemIndex = originalIndexFromItemIndex(index, sizes)\n    const groupIndex = findMaxKeyValue(sizes.groupOffsetTree, itemIndex)[0]\n\n    return [\n      { index: groupIndex, size: 0, offset: 0 },\n      { index: itemIndex, size: 0, offset: 0, data: data && data[0] },\n    ]\n  }\n  return [{ index, size: 0, offset: 0, data: data && data[0] }]\n}\n\nconst EMPTY_LIST_STATE: ListState = {\n  items: [] as ListItems,\n  topItems: [] as ListItems,\n  offsetTop: 0,\n  offsetBottom: 0,\n  top: 0,\n  bottom: 0,\n  topListHeight: 0,\n  totalCount: 0,\n}\n\nfunction transposeItems(items: Item<any>[], sizes: SizeState, firstItemIndex: number): ListItems {\n  if (items.length === 0) {\n    return []\n  }\n\n  if (!hasGroups(sizes)) {\n    return items.map((item) => ({ ...item, index: item.index + firstItemIndex, originalIndex: item.index }))\n  }\n\n  const startIndex = items[0].index\n  const endIndex = items[items.length - 1].index\n\n  const transposedItems = [] as ListItems\n  const groupRanges = rangesWithin(sizes.groupOffsetTree, startIndex, endIndex)\n  let currentRange: Range<number> | undefined = undefined\n  let currentGroupIndex = 0\n\n  for (const item of items) {\n    if (!currentRange || currentRange.end < item.index) {\n      currentRange = groupRanges.shift()!\n      currentGroupIndex = sizes.groupIndices.indexOf(currentRange.start)\n    }\n\n    let transposedItem: { type: 'group'; index: number } | { index: number; groupIndex: number }\n\n    if (item.index === currentRange.start) {\n      transposedItem = {\n        type: 'group' as const,\n        index: currentGroupIndex,\n      }\n    } else {\n      transposedItem = {\n        index: item.index - (currentGroupIndex + 1) + firstItemIndex,\n        groupIndex: currentGroupIndex,\n      }\n    }\n\n    transposedItems.push({\n      ...transposedItem,\n      size: item.size,\n      offset: item.offset,\n      originalIndex: item.index,\n      data: item.data,\n    })\n  }\n\n  return transposedItems\n}\n\nexport function buildListState(\n  items: Item<any>[],\n  topItems: Item<any>[],\n  totalCount: number,\n  sizes: SizeState,\n  firstItemIndex: number\n): ListState {\n  const { lastSize, lastOffset, lastIndex } = sizes\n  let offsetTop = 0\n  let bottom = 0\n\n  if (items.length > 0) {\n    offsetTop = items[0].offset\n    const lastItem = items[items.length - 1]\n    bottom = lastItem.offset + lastItem.size\n  }\n\n  const total = lastOffset + (totalCount - lastIndex) * lastSize\n  const top = offsetTop\n  const offsetBottom = total - bottom\n\n  return {\n    items: transposeItems(items, sizes, firstItemIndex),\n    topItems: transposeItems(topItems, sizes, firstItemIndex),\n    topListHeight: topItems.reduce((height, item) => item.size + height, 0),\n    offsetTop,\n    offsetBottom,\n    top,\n    bottom,\n    totalCount,\n  }\n}\n\nexport const listStateSystem = u.system(\n  ([\n    { sizes, totalCount, data, firstItemIndex },\n    groupedListSystem,\n    { visibleRange, listBoundary, topListHeight: rangeTopListHeight },\n    { scrolledToInitialItem, initialTopMostItemIndex },\n    { topListHeight },\n    stateFlags,\n    { didMount },\n  ]) => {\n    const topItemsIndexes = u.statefulStream<Array<number>>([])\n    const itemsRendered = u.stream<ListItems>()\n\n    u.connect(groupedListSystem.topItemsIndexes, topItemsIndexes)\n\n    const listState = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(\n          didMount,\n          u.duc(visibleRange),\n          u.duc(totalCount),\n          u.duc(sizes),\n          u.duc(initialTopMostItemIndex),\n          scrolledToInitialItem,\n          u.duc(topItemsIndexes),\n          u.duc(firstItemIndex),\n          data\n        ),\n        u.filter(([mount]) => mount),\n        u.map(\n          ([\n            ,\n            [startOffset, endOffset],\n            totalCount,\n            sizes,\n            initialTopMostItemIndex,\n            scrolledToInitialItem,\n            topItemsIndexes,\n            firstItemIndex,\n            data,\n          ]) => {\n            const sizesValue = sizes\n            const { sizeTree, offsetTree } = sizesValue\n\n            if (totalCount === 0 || (startOffset === 0 && endOffset === 0)) {\n              return EMPTY_LIST_STATE\n            }\n\n            if (empty(sizeTree)) {\n              return buildListState(\n                probeItemSet(getInitialTopMostItemIndexNumber(initialTopMostItemIndex, totalCount), sizesValue, data),\n                [],\n                totalCount,\n                sizesValue,\n                firstItemIndex\n              )\n            }\n\n            const topItems = [] as Item<any>[]\n\n            if (topItemsIndexes.length > 0) {\n              const startIndex = topItemsIndexes[0]\n              const endIndex = topItemsIndexes[topItemsIndexes.length - 1]\n              let offset = 0\n              for (const range of rangesWithin(sizeTree, startIndex, endIndex)) {\n                const size = range.value\n                const rangeStartIndex = Math.max(range.start, startIndex)\n                const rangeEndIndex = Math.min(range.end, endIndex)\n                for (let i = rangeStartIndex; i <= rangeEndIndex; i++) {\n                  topItems.push({ index: i, size, offset: offset, data: data && data[i] })\n                  offset += size\n                }\n              }\n            }\n\n            // If the list hasn't scrolled to the initial item because the initial item was set,\n            // render empty list.\n            //\n            // This is a condition to be evaluated past the probe check, do not merge\n            // with the totalCount check above\n            if (!scrolledToInitialItem) {\n              return buildListState([], topItems, totalCount, sizesValue, firstItemIndex)\n            }\n\n            const minStartIndex = topItemsIndexes.length > 0 ? topItemsIndexes[topItemsIndexes.length - 1] + 1 : 0\n\n            const offsetPointRanges = rangesWithinOffsets(offsetTree, startOffset, endOffset, minStartIndex)\n            if (offsetPointRanges.length === 0) {\n              return null\n            }\n\n            const maxIndex = totalCount - 1\n\n            const items = u.tap([] as Item<any>[], (result) => {\n              for (const range of offsetPointRanges) {\n                const point = range.value\n                let offset = point.offset\n                let rangeStartIndex = range.start\n                const size = point.size\n\n                if (point.offset < startOffset) {\n                  rangeStartIndex += Math.floor((startOffset - point.offset) / size)\n                  offset += (rangeStartIndex - range.start) * size\n                }\n\n                if (rangeStartIndex < minStartIndex) {\n                  offset += (minStartIndex - rangeStartIndex) * size\n                  rangeStartIndex = minStartIndex\n                }\n\n                const endIndex = Math.min(range.end, maxIndex)\n\n                for (let i = rangeStartIndex; i <= endIndex; i++) {\n                  if (offset >= endOffset) {\n                    break\n                  }\n\n                  result.push({ index: i, size, offset: offset, data: data && data[i] })\n                  offset += size\n                }\n              }\n            })\n\n            return buildListState(items, topItems, totalCount, sizesValue, firstItemIndex)\n          }\n        ),\n        //@ts-expect-error filter needs to be fixed\n        u.filter((value) => value !== null),\n        u.distinctUntilChanged()\n      ),\n      EMPTY_LIST_STATE\n    )\n\n    u.connect(\n      u.pipe(\n        data,\n        u.filter((data) => data !== undefined),\n        u.map((data) => data!.length)\n      ),\n      totalCount\n    )\n\n    u.connect(u.pipe(listState, u.map(u.prop('topListHeight'))), topListHeight)\n    u.connect(topListHeight, rangeTopListHeight)\n\n    u.connect(\n      u.pipe(\n        listState,\n        u.map((state) => [state.top, state.bottom])\n      ),\n      listBoundary\n    )\n\n    u.connect(\n      u.pipe(\n        listState,\n        u.map((state) => state.items)\n      ),\n      itemsRendered\n    )\n\n    const endReached = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.filter(({ items }) => items.length > 0),\n        u.withLatestFrom(totalCount, data),\n        u.filter(([{ items }, totalCount]) => items[items.length - 1].originalIndex === totalCount - 1),\n        u.map(([, totalCount, data]) => [totalCount - 1, data] as [number, unknown[]]),\n        u.distinctUntilChanged(tupleComparator),\n        u.map(([count]) => count as number)\n      )\n    )\n\n    const startReached = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.throttleTime(200),\n        u.filter(({ items, topItems }) => {\n          return items.length > 0 && items[0].originalIndex === topItems.length\n        }),\n        u.map(({ items }) => items[0].index),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const rangeChanged = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.filter(({ items }) => items.length > 0),\n        u.map(({ items }) => {\n          return {\n            startIndex: items[0].index,\n            endIndex: items[items.length - 1].index,\n          } as ListRange\n        }),\n        u.distinctUntilChanged(rangeComparator)\n      )\n    )\n\n    return { listState, topItemsIndexes, endReached, startReached, rangeChanged, itemsRendered, ...stateFlags }\n  },\n  u.tup(\n    sizeSystem,\n    groupedListSystem,\n    sizeRangeSystem,\n    initialTopMostItemIndexSystem,\n    scrollToIndexSystem,\n    stateFlagsSystem,\n    propsReadySystem\n  ),\n  { singleton: true }\n)\n","export function simpleMemoize<T extends () => any>(func: T): T {\n  let called = false\n  let result: unknown\n\n  return (() => {\n    if (!called) {\n      called = true\n      result = func()\n    }\n    return result\n  }) as T\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { listStateSystem, buildListState } from './listStateSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { propsReadySystem } from './propsReadySystem'\n\nexport const initialItemCountSystem = u.system(\n  ([{ sizes, firstItemIndex, data }, { listState }, { didMount }]) => {\n    const initialItemCount = u.statefulStream(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialItemCount),\n        u.filter(([, count]) => count !== 0),\n        u.withLatestFrom(sizes, firstItemIndex, data),\n        u.map(([[, count], sizes, firstItemIndex, data = []]) => {\n          let includedGroupsCount = 0\n          if (sizes.groupIndices.length > 0) {\n            for (const index of sizes.groupIndices) {\n              if (index - includedGroupsCount >= count) {\n                break\n              }\n              includedGroupsCount++\n            }\n          }\n          const adjustedCount = count + includedGroupsCount\n          const items = Array.from({ length: adjustedCount }).map((_, index) => ({ index, size: 0, offset: 0, data: data[index] }))\n          return buildListState(items, [], adjustedCount, sizes, firstItemIndex)\n        })\n      ),\n      listState\n    )\n\n    return { initialItemCount }\n  },\n  u.tup(sizeSystem, listStateSystem, propsReadySystem),\n  { singleton: true }\n)\n","import { connect, system, map, pipe, statefulStream, tup, filter } from '@virtuoso.dev/urx'\nimport { listStateSystem } from './listStateSystem'\n\nexport const topItemCountSystem = system(([{ topItemsIndexes }]) => {\n  const topItemCount = statefulStream(0)\n\n  connect(\n    pipe(\n      topItemCount,\n      filter((length) => length > 0),\n      map((length) => Array.from({ length }).map((_, index) => index))\n    ),\n    topItemsIndexes\n  )\n  return { topItemCount }\n}, tup(listStateSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { listStateSystem } from './listStateSystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const totalListHeightSystem = u.system(\n  ([{ footerHeight, headerHeight }, { listState }]) => {\n    const totalListHeightChanged = u.stream<number>()\n    const totalListHeight = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(footerHeight, headerHeight, listState),\n        u.map(([footerHeight, headerHeight, listState]) => {\n          return footerHeight + headerHeight + listState.offsetBottom + listState.bottom\n        })\n      ),\n      0\n    )\n\n    u.connect(u.duc(totalListHeight), totalListHeightChanged)\n\n    return { totalListHeight, totalListHeightChanged }\n  },\n  u.tup(domIOSystem, listStateSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { listStateSystem } from './listStateSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { UP, stateFlagsSystem } from './stateFlagsSystem'\nimport { ListItem } from './interfaces'\nimport { loggerSystem, LogLevel } from './loggerSystem'\n\n/**\n * Fixes upward scrolling by calculating and compensation from changed item heights, using scrollBy.\n */\nexport const upwardScrollFixSystem = u.system(\n  ([\n    { scrollBy, scrollTop, deviation, scrollingInProgress },\n    { isScrolling, isAtBottom, atBottomState, scrollDirection, lastJumpDueToItemResize },\n    { listState },\n    { beforeUnshiftWith, shiftWithOffset, sizes },\n    { log },\n  ]) => {\n    const deviationOffset = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.withLatestFrom(lastJumpDueToItemResize),\n        u.scan(\n          ([, prevItems, prevTotalCount], [{ items, totalCount }, lastJumpDueToItemResize]) => {\n            let newDev = 0\n            if (prevTotalCount === totalCount) {\n              if (prevItems.length > 0 && items.length > 0) {\n                const firstItemIndex = items[0].originalIndex\n                const prevFirstItemIndex = prevItems[0].originalIndex\n                const atStart = firstItemIndex === 0 && prevFirstItemIndex === 0\n                const onlyItem = items.length === 1\n\n                if (!atStart) {\n                  for (let index = items.length - 1; index >= 0; index--) {\n                    const item = items[index]\n\n                    const prevItem = prevItems.find((pItem) => pItem.originalIndex === item.originalIndex)\n\n                    if (!prevItem) {\n                      continue\n                    }\n\n                    if (item.offset !== prevItem.offset || onlyItem) {\n                      newDev = item.offset - prevItem.offset + item.size - prevItem.size\n                      break\n                    }\n                  }\n                }\n              }\n\n              if (newDev !== 0) {\n                newDev += lastJumpDueToItemResize\n              }\n            }\n\n            return [newDev, items, totalCount] as [number, ListItem<any>[], number]\n          },\n          [0, [], 0] as [number, ListItem<any>[], number]\n        ),\n        u.filter(([amount]) => amount !== 0),\n        u.withLatestFrom(scrollTop, scrollDirection, scrollingInProgress, log, isAtBottom, atBottomState),\n        u.filter(([, scrollTop, scrollDirection, scrollingInProgress]) => {\n          // console.log({ amount, scrollTop, scrollDirection, scrollingInProgress, isAtBottom, atBottomState })\n          return !scrollingInProgress && scrollTop !== 0 && scrollDirection === UP // && (isAtBottom ? amount > 0 : true)\n        }),\n        u.map(([[amount], , , , log]) => {\n          log('Upward scrolling compensation', { amount }, LogLevel.DEBUG)\n          return amount\n        })\n      )\n    )\n\n    u.connect(\n      u.pipe(\n        deviationOffset,\n        u.withLatestFrom(deviation),\n        u.map(([amount, deviation]) => deviation - amount)\n      ),\n      deviation\n    )\n\n    // when the browser stops scrolling,\n    // restore the position and reset the glitching\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.statefulStreamFromEmitter(isScrolling, false), deviation),\n        u.filter(([is, deviation]) => !is && deviation !== 0),\n        u.map(([_, deviation]) => deviation),\n        u.throttleTime(1)\n      ),\n      (offset) => {\n        if (offset > 0) {\n          u.publish(scrollBy, { top: -offset, behavior: 'auto' })\n          u.publish(deviation, 0)\n        } else {\n          u.publish(deviation, 0)\n          u.publish(scrollBy, { top: -offset, behavior: 'auto' })\n        }\n      }\n    )\n\n    u.connect(\n      u.pipe(\n        shiftWithOffset,\n        u.map((offset) => {\n          return { top: -offset }\n        })\n      ),\n      scrollBy\n    )\n\n    u.connect(\n      u.pipe(\n        beforeUnshiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([offset, { lastSize }]) => offset * lastSize)\n      ),\n      deviationOffset\n    )\n\n    return { deviation }\n  },\n  u.tup(domIOSystem, stateFlagsSystem, listStateSystem, sizeSystem, loggerSystem)\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const initialScrollTopSystem = u.system(\n  ([{ totalListHeight }, { didMount }, { scrollTo }]) => {\n    const initialScrollTop = u.statefulStream(0)\n\n    u.subscribe(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialScrollTop),\n        u.filter(([, offset]) => offset !== 0),\n        u.map(([, offset]) => ({ top: offset }))\n      ),\n      (location) => {\n        u.handleNext(\n          u.pipe(\n            totalListHeight,\n            u.filter((val) => val !== 0)\n          ),\n          () => {\n            setTimeout(() => {\n              u.publish(scrollTo, location)\n            })\n          }\n        )\n      }\n    )\n\n    return {\n      initialScrollTop,\n    }\n  },\n  u.tup(totalListHeightSystem, propsReadySystem, domIOSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const alignToBottomSystem = u.system(\n  ([{ viewportHeight }, { totalListHeight }]) => {\n    const alignToBottom = u.statefulStream(false)\n\n    const paddingTopAddition = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(alignToBottom, viewportHeight, totalListHeight),\n        u.filter(([enabled]) => enabled),\n        u.map(([, viewportHeight, totalListHeight]) => {\n          return Math.max(0, viewportHeight - totalListHeight)\n        }),\n        u.distinctUntilChanged()\n      ),\n      0\n    )\n\n    return { alignToBottom, paddingTopAddition }\n  },\n  u.tup(domIOSystem, totalListHeightSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { offsetOf, originalIndexFromItemIndex, sizeSystem } from './sizeSystem'\nimport { loggerSystem } from './loggerSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { listStateSystem } from './listStateSystem'\n\nexport interface ScrollIntoViewLocation {\n  index: number\n  behavior?: 'auto' | 'smooth'\n  done?: () => void\n}\n\nexport const scrollIntoViewSystem = u.system(\n  ([{ sizes, totalCount }, { scrollTop, viewportHeight, headerHeight, scrollingInProgress }, { scrollToIndex }]) => {\n    const scrollIntoView = u.stream<ScrollIntoViewLocation>()\n\n    u.connect(\n      u.pipe(\n        scrollIntoView,\n        u.withLatestFrom(sizes, viewportHeight, totalCount, headerHeight, scrollTop),\n        u.map(([{ index, behavior = 'auto', done }, sizes, viewportHeight, totalCount, headerHeight, scrollTop]) => {\n          const lastIndex = totalCount - 1\n          let location = null\n          index = originalIndexFromItemIndex(index, sizes)\n          index = Math.max(0, index, Math.min(lastIndex, index))\n\n          const itemTop = offsetOf(index, sizes.offsetTree) + headerHeight\n          if (itemTop < scrollTop) {\n            location = { index, behavior, align: 'start' }\n          } else {\n            const itemBottom = itemTop + findMaxKeyValue(sizes.sizeTree, index)[1]!\n\n            if (itemBottom > scrollTop + viewportHeight) {\n              location = { index, behavior, align: 'end' }\n            }\n          }\n\n          if (location) {\n            done &&\n              u.handleNext(\n                u.pipe(\n                  scrollingInProgress,\n                  u.skip(1),\n                  u.filter((value) => value === false)\n                ),\n                done\n              )\n          } else {\n            done && done()\n          }\n\n          return location\n        }),\n        u.filter((value) => value !== null)\n      ),\n      scrollToIndex\n    )\n\n    return {\n      scrollIntoView,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, scrollToIndexSystem, listStateSystem, loggerSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { followOutputSystem } from './followOutputSystem'\nimport { groupedListSystem } from './groupedListSystem'\nimport { initialItemCountSystem } from './initialItemCountSystem'\nimport { initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { listStateSystem } from './listStateSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollSeekSystem } from './scrollSeekSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { topItemCountSystem } from './topItemCountSystem'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { upwardScrollFixSystem } from './upwardScrollFixSystem'\nimport { initialScrollTopSystem } from './initialScrollTopSystem'\nimport { alignToBottomSystem } from './alignToBottomSystem'\nimport { windowScrollerSystem } from './windowScrollerSystem'\nimport { loggerSystem } from './loggerSystem'\nimport { scrollIntoViewSystem } from './scrollIntoViewSystem'\n\n// workaround the growing list of systems below\n// fix this with 4.1 recursive conditional types\nconst featureGroup1System = u.system(\n  ([\n    sizeRange,\n    initialItemCount,\n    propsReady,\n    scrollSeek,\n    totalListHeight,\n    initialScrollTopSystem,\n    alignToBottom,\n    windowScroller,\n    scrollIntoView,\n  ]) => {\n    return {\n      ...sizeRange,\n      ...initialItemCount,\n      ...propsReady,\n      ...scrollSeek,\n      ...totalListHeight,\n      ...initialScrollTopSystem,\n      ...alignToBottom,\n      ...windowScroller,\n      ...scrollIntoView,\n    }\n  },\n  u.tup(\n    sizeRangeSystem,\n    initialItemCountSystem,\n    propsReadySystem,\n    scrollSeekSystem,\n    totalListHeightSystem,\n    initialScrollTopSystem,\n    alignToBottomSystem,\n    windowScrollerSystem,\n    scrollIntoViewSystem\n  )\n)\n\nexport const listSystem = u.system(\n  ([\n    {\n      totalCount,\n      sizeRanges,\n      fixedItemSize,\n      defaultItemSize,\n      trackItemSizes,\n      itemSize,\n      data,\n      firstItemIndex,\n      groupIndices,\n      statefulTotalCount,\n    },\n    { initialTopMostItemIndex, scrolledToInitialItem },\n    domIO,\n    followOutput,\n    { listState, topItemsIndexes, ...flags },\n    { scrollToIndex },\n    _,\n    { topItemCount },\n    { groupCounts },\n    featureGroup1,\n    log,\n  ]) => {\n    u.connect(flags.rangeChanged, featureGroup1.scrollSeekRangeChanged)\n    u.connect(u.pipe(featureGroup1.windowViewportRect, u.map(u.prop('visibleHeight'))), domIO.viewportHeight)\n\n    return {\n      // input\n      totalCount,\n      data,\n      firstItemIndex,\n      sizeRanges,\n      initialTopMostItemIndex,\n      scrolledToInitialItem,\n      topItemsIndexes,\n      topItemCount,\n      groupCounts,\n      fixedItemHeight: fixedItemSize,\n      defaultItemHeight: defaultItemSize,\n      ...followOutput,\n\n      // output\n      statefulTotalCount,\n      listState,\n      scrollToIndex,\n      trackItemSizes,\n      itemSize,\n      groupIndices,\n\n      // exported from stateFlagsSystem\n      ...flags,\n      // the bag of IO from featureGroup1System\n      ...featureGroup1,\n      ...domIO,\n      ...log,\n    }\n  },\n  u.tup(\n    sizeSystem,\n    initialTopMostItemIndexSystem,\n    domIOSystem,\n    followOutputSystem,\n    listStateSystem,\n    scrollToIndexSystem,\n    upwardScrollFixSystem,\n    topItemCountSystem,\n    groupedListSystem,\n    featureGroup1System,\n    loggerSystem\n  )\n)\n","import { simpleMemoize } from './simpleMemoize'\n\nconst WEBKIT_STICKY = '-webkit-sticky'\nconst STICKY = 'sticky'\n\nexport const positionStickyCssValue = simpleMemoize(() => {\n  if (typeof document === 'undefined') {\n    return STICKY\n  }\n  const node = document.createElement('div')\n  node.style.position = WEBKIT_STICKY\n  return node.style.position === WEBKIT_STICKY ? WEBKIT_STICKY : STICKY\n})\n","import { RefHandle, systemToComponent } from '@virtuoso.dev/react-urx'\nimport {\n  compose,\n  connect,\n  getValue,\n  map,\n  pipe,\n  publish,\n  statefulStream,\n  stream,\n  Stream,\n  subscribe,\n  system,\n  tup,\n  withLatestFrom,\n  statefulStreamFromEmitter,\n  distinctUntilChanged,\n  noop,\n} from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { ComponentType, createElement, CSSProperties, FC } from 'react'\nimport useIsomorphicLayoutEffect from './hooks/useIsomorphicLayoutEffect'\nimport useChangedListContentsSizes from './hooks/useChangedChildSizes'\nimport useScrollTop from './hooks/useScrollTop'\nimport useSize from './hooks/useSize'\nimport { Components, ComputeItemKey, GroupContent, GroupItemContent, ItemContent, ListRootProps } from './interfaces'\nimport { listSystem } from './listSystem'\nimport { positionStickyCssValue } from './utils/positionStickyCssValue'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\nimport { correctItemSize } from './utils/correctItemSize'\nimport { ScrollerProps } from '.'\n\nexport function identity<T>(value: T) {\n  return value\n}\n\nconst listComponentPropsSystem = system(() => {\n  const itemContent = statefulStream<ItemContent<any, any> | GroupItemContent<any, any>>((index: number) => `Item ${index}`)\n  const context = statefulStream<unknown>(null)\n  const groupContent = statefulStream<GroupContent>((index: number) => `Group ${index}`)\n  const components = statefulStream<Components<any>>({})\n  const computeItemKey = statefulStream<ComputeItemKey<any, any>>(identity)\n  const headerFooterTag = statefulStream('div')\n  const scrollerRef = statefulStream<(ref: HTMLElement | Window | null) => void>(noop)\n\n  const distinctProp = <K extends keyof Components<any>>(propName: K, defaultValue: Components<any>[K] | null | 'div' = null) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components) => components[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    context,\n    itemContent,\n    groupContent,\n    components,\n    computeItemKey,\n    headerFooterTag,\n    scrollerRef,\n    FooterComponent: distinctProp('Footer'),\n    HeaderComponent: distinctProp('Header'),\n    TopItemListComponent: distinctProp('TopItemList'),\n    ListComponent: distinctProp('List', 'div'),\n    ItemComponent: distinctProp('Item', 'div'),\n    GroupComponent: distinctProp('Group', 'div'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    EmptyPlaceholder: distinctProp('EmptyPlaceholder'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder'),\n  }\n})\n\nexport function addDeprecatedAlias<T>(prop: Stream<T>, message: string) {\n  const alias = stream<T>()\n  subscribe(alias, () =>\n    console.warn(`react-virtuoso: You are using a deprecated property. ${message}`, 'color: red;', 'color: inherit;', 'color: blue;')\n  )\n  connect(alias, prop)\n  return alias\n}\n\nconst combinedSystem = system(([listSystem, propsSystem]) => {\n  const deprecatedProps = {\n    item: addDeprecatedAlias(propsSystem.itemContent, 'Rename the %citem%c prop to %citemContent.'),\n    group: addDeprecatedAlias(propsSystem.groupContent, 'Rename the %cgroup%c prop to %cgroupContent.'),\n    topItems: addDeprecatedAlias(listSystem.topItemCount, 'Rename the %ctopItems%c prop to %ctopItemCount.'),\n    itemHeight: addDeprecatedAlias(listSystem.fixedItemHeight, 'Rename the %citemHeight%c prop to %cfixedItemHeight.'),\n    scrollingStateChange: addDeprecatedAlias(listSystem.isScrolling, 'Rename the %cscrollingStateChange%c prop to %cisScrolling.'),\n    adjustForPrependedItems: stream<any>(),\n    maxHeightCacheSize: stream<any>(),\n    footer: stream<any>(),\n    header: stream<any>(),\n    HeaderContainer: stream<any>(),\n    FooterContainer: stream<any>(),\n    ItemContainer: stream<any>(),\n    ScrollContainer: stream<any>(),\n    GroupContainer: stream<any>(),\n    ListContainer: stream<any>(),\n    emptyComponent: stream<any>(),\n    scrollSeek: stream<any>(),\n  }\n\n  subscribe(deprecatedProps.adjustForPrependedItems, () => {\n    console.warn(\n      `react-virtuoso: adjustForPrependedItems is no longer supported. Use the firstItemIndex property instead - https://virtuoso.dev/prepend-items.`,\n      'color: red;',\n      'color: inherit;',\n      'color: blue;'\n    )\n  })\n\n  subscribe(deprecatedProps.maxHeightCacheSize, () => {\n    console.warn(`react-virtuoso: maxHeightCacheSize is no longer necessary. Setting it has no effect - remove it from your code.`)\n  })\n\n  subscribe(deprecatedProps.HeaderContainer, () => {\n    console.warn(\n      `react-virtuoso: HeaderContainer is deprecated. Use headerFooterTag if you want to change the wrapper of the header component and pass components.Header to change its contents.`\n    )\n  })\n\n  subscribe(deprecatedProps.FooterContainer, () => {\n    console.warn(\n      `react-virtuoso: FooterContainer is deprecated. Use headerFooterTag if you want to change the wrapper of the footer component and pass components.Footer to change its contents.`\n    )\n  })\n\n  function deprecateComponentProp(stream: Stream<any>, componentName: string, propName: string) {\n    connect(\n      pipe(\n        stream,\n        withLatestFrom(propsSystem.components),\n        map(([comp, components]) => {\n          console.warn(`react-virtuoso: ${propName} property is deprecated. Pass components.${componentName} instead.`)\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          return { ...components, [componentName]: comp }\n        })\n      ),\n      propsSystem.components\n    )\n  }\n\n  subscribe(deprecatedProps.scrollSeek, ({ placeholder, ...config }) => {\n    console.warn(\n      `react-virtuoso: scrollSeek property is deprecated. Pass scrollSeekConfiguration and specify the placeholder in components.ScrollSeekPlaceholder instead.`\n    )\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    publish(propsSystem.components, { ...getValue(propsSystem.components), ScrollSeekPlaceholder: placeholder })\n    publish(listSystem.scrollSeekConfiguration, config)\n  })\n\n  deprecateComponentProp(deprecatedProps.footer, 'Footer', 'footer')\n  deprecateComponentProp(deprecatedProps.header, 'Header', 'header')\n  deprecateComponentProp(deprecatedProps.ItemContainer, 'Item', 'ItemContainer')\n  deprecateComponentProp(deprecatedProps.ListContainer, 'List', 'ListContainer')\n  deprecateComponentProp(deprecatedProps.ScrollContainer, 'Scroller', 'ScrollContainer')\n  deprecateComponentProp(deprecatedProps.emptyComponent, 'EmptyPlaceholder', 'emptyComponent')\n  deprecateComponentProp(deprecatedProps.GroupContainer, 'Group', 'GroupContainer')\n\n  return { ...listSystem, ...propsSystem, ...deprecatedProps }\n}, tup(listSystem, listComponentPropsSystem))\n\nconst DefaultScrollSeekPlaceholder = ({ height }: { height: number }) => <div style={{ height }}></div>\n\nconst GROUP_STYLE = { position: positionStickyCssValue(), zIndex: 1, overflowAnchor: 'none' }\n\nexport const Items = React.memo(function VirtuosoItems({ showTopList = false }: { showTopList?: boolean }) {\n  const listState = useEmitterValue('listState')\n  const deviation = useEmitterValue('deviation')\n  const sizeRanges = usePublisher('sizeRanges')\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const windowScrollContainerStateCallback = usePublisher('windowScrollContainerState')\n  const _scrollContainerStateCallback = usePublisher('scrollContainerState')\n  const scrollContainerStateCallback =\n    customScrollParent || useWindowScroll ? windowScrollContainerStateCallback : _scrollContainerStateCallback\n  const itemContent = useEmitterValue('itemContent')\n  const context = useEmitterValue('context')\n  const groupContent = useEmitterValue('groupContent')\n  const trackItemSizes = useEmitterValue('trackItemSizes')\n  const itemSize = useEmitterValue('itemSize')\n  const log = useEmitterValue('log')\n\n  const ref = useChangedListContentsSizes(\n    sizeRanges,\n    itemSize,\n    trackItemSizes,\n    showTopList ? noop : scrollContainerStateCallback,\n    log,\n    customScrollParent\n  )\n  const EmptyPlaceholder = useEmitterValue('EmptyPlaceholder')\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder') || DefaultScrollSeekPlaceholder\n  const ListComponent = useEmitterValue('ListComponent')!\n  const ItemComponent = useEmitterValue('ItemComponent')!\n  const GroupComponent = useEmitterValue('GroupComponent')!\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const hasGroups = useEmitterValue('groupIndices').length > 0\n  const paddingTopAddition = useEmitterValue('paddingTopAddition')\n  const firstItemIndex = useEmitterValue('firstItemIndex')\n  const statefulTotalCount = useEmitterValue('statefulTotalCount')\n\n  const containerStyle: CSSProperties = showTopList\n    ? {}\n    : {\n        boxSizing: 'border-box',\n        paddingTop: listState.offsetTop + paddingTopAddition,\n        paddingBottom: listState.offsetBottom,\n        marginTop: deviation,\n      }\n\n  if (!showTopList && statefulTotalCount === 0 && EmptyPlaceholder) {\n    return createElement(EmptyPlaceholder, contextPropIfNotDomElement(EmptyPlaceholder, context))\n  }\n\n  return createElement(\n    ListComponent,\n    {\n      ...contextPropIfNotDomElement(ListComponent, context),\n      ref,\n      style: containerStyle,\n      'data-test-id': showTopList ? 'virtuoso-top-item-list' : 'virtuoso-item-list',\n    },\n    (showTopList ? listState.topItems : listState.items).map((item) => {\n      const index = item.originalIndex!\n      const key = computeItemKey(index + firstItemIndex, item.data, context)\n\n      if (isSeeking) {\n        return createElement(ScrollSeekPlaceholder, {\n          ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n          key,\n          index: item.index,\n          height: item.size,\n          type: item.type || 'item',\n          ...(item.type === 'group' ? {} : { groupIndex: item.groupIndex }),\n        })\n      }\n\n      if (item.type === 'group') {\n        return createElement(\n          GroupComponent,\n          {\n            ...contextPropIfNotDomElement(GroupComponent, context),\n            key,\n            'data-index': index,\n            'data-known-size': item.size,\n            'data-item-index': item.index,\n            style: GROUP_STYLE,\n          } as any,\n          groupContent(item.index)\n        )\n      } else {\n        return createElement(\n          ItemComponent,\n          {\n            ...contextPropIfNotDomElement(ItemComponent, context),\n            key,\n            'data-index': index,\n            'data-known-size': item.size,\n            'data-item-index': item.index,\n            'data-item-group-index': item.groupIndex,\n            style: { overflowAnchor: 'none' },\n          } as any,\n          hasGroups\n            ? (itemContent as GroupItemContent<any, any>)(item.index, item.groupIndex!, item.data, context)\n            : (itemContent as ItemContent<any, any>)(item.index, item.data, context)\n        )\n      }\n    })\n  )\n})\n\nexport const scrollerStyle: CSSProperties = {\n  height: '100%',\n  outline: 'none',\n  overflowY: 'auto',\n  position: 'relative',\n  WebkitOverflowScrolling: 'touch',\n}\n\nexport const viewportStyle: CSSProperties = {\n  width: '100%',\n  height: '100%',\n  position: 'absolute',\n  top: 0,\n}\n\nconst topItemListStyle: CSSProperties = {\n  width: '100%',\n  position: positionStickyCssValue(),\n  top: 0,\n}\n\nexport function contextPropIfNotDomElement(element: unknown, context: unknown) {\n  if (typeof element === 'string') {\n    return undefined\n  }\n  return { context }\n}\n\nconst Header: FC = React.memo(function VirtuosoHeader() {\n  const Header = useEmitterValue('HeaderComponent')\n  const headerHeight = usePublisher('headerHeight')\n  const headerFooterTag = useEmitterValue('headerFooterTag')\n  const ref = useSize((el) => headerHeight(correctItemSize(el, 'height')))\n  const context = useEmitterValue('context')\n  return Header ? createElement(headerFooterTag, { ref }, createElement(Header, contextPropIfNotDomElement(Header, context))) : null\n})\n\nconst Footer: FC = React.memo(function VirtuosoFooter() {\n  const Footer = useEmitterValue('FooterComponent')\n  const footerHeight = usePublisher('footerHeight')\n  const headerFooterTag = useEmitterValue('headerFooterTag')\n  const ref = useSize((el) => footerHeight(correctItemSize(el, 'height')))\n  const context = useEmitterValue('context')\n  return Footer ? createElement(headerFooterTag, { ref }, createElement(Footer, contextPropIfNotDomElement(Footer, context))) : null\n})\n\nexport interface Hooks {\n  usePublisher: typeof usePublisher\n  useEmitterValue: typeof useEmitterValue\n  useEmitter: typeof useEmitter\n}\n\nexport function buildScroller({ usePublisher, useEmitter, useEmitterValue }: Hooks) {\n  const Scroller: ComponentType<ScrollerProps> = React.memo(function VirtuosoScroller({ style, children, ...props }) {\n    const scrollContainerStateCallback = usePublisher('scrollContainerState')\n    const ScrollerComponent = useEmitterValue('ScrollerComponent')!\n    const smoothScrollTargetReached = usePublisher('smoothScrollTargetReached')\n    const scrollerRefCallback = useEmitterValue('scrollerRef')\n    const context = useEmitterValue('context')\n\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollContainerStateCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      scrollerRefCallback\n    )\n\n    useEmitter('scrollTo', scrollToCallback)\n    useEmitter('scrollBy', scrollByCallback)\n    return createElement(\n      ScrollerComponent,\n      {\n        ref: scrollerRef as React.MutableRefObject<HTMLDivElement | null>,\n        style: { ...scrollerStyle, ...style },\n        'data-test-id': 'virtuoso-scroller',\n        'data-virtuoso-scroller': true,\n        tabIndex: 0,\n        ...props,\n        ...contextPropIfNotDomElement(ScrollerComponent, context),\n      },\n      children\n    )\n  })\n  return Scroller\n}\n\nexport function buildWindowScroller({ usePublisher, useEmitter, useEmitterValue }: Hooks) {\n  const Scroller: Components['Scroller'] = React.memo(function VirtuosoWindowScroller({ style, children, ...props }) {\n    const scrollContainerStateCallback = usePublisher('windowScrollContainerState')\n    const ScrollerComponent = useEmitterValue('ScrollerComponent')!\n    const smoothScrollTargetReached = usePublisher('smoothScrollTargetReached')\n    const totalListHeight = useEmitterValue('totalListHeight')\n    const deviation = useEmitterValue('deviation')\n    const customScrollParent = useEmitterValue('customScrollParent')\n    const context = useEmitterValue('context')\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollContainerStateCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      noop,\n      customScrollParent\n    )\n\n    useIsomorphicLayoutEffect(() => {\n      scrollerRef.current = customScrollParent ? customScrollParent : window\n      return () => {\n        scrollerRef.current = null\n      }\n    }, [scrollerRef, customScrollParent])\n\n    useEmitter('windowScrollTo', scrollToCallback)\n    useEmitter('scrollBy', scrollByCallback)\n    return createElement(\n      ScrollerComponent,\n      {\n        style: { position: 'relative', ...style, ...(totalListHeight !== 0 ? { height: totalListHeight + deviation } : {}) },\n        'data-virtuoso-scroller': true,\n        ...props,\n        ...contextPropIfNotDomElement(ScrollerComponent, context),\n      },\n      children\n    )\n  })\n  return Scroller\n}\n\nconst Viewport: FC = ({ children }) => {\n  const viewportHeight = usePublisher('viewportHeight')\n  const viewportRef = useSize(compose(viewportHeight, (el) => correctItemSize(el, 'height')))\n\n  return (\n    <div style={viewportStyle} ref={viewportRef} data-viewport-type=\"element\">\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC = ({ children }) => {\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent)\n\n  return (\n    <div ref={viewportRef} style={viewportStyle} data-viewport-type=\"window\">\n      {children}\n    </div>\n  )\n}\n\nconst TopItemListContainer: FC = ({ children }) => {\n  const TopItemList = useEmitterValue('TopItemListComponent')\n  const headerHeight = useEmitterValue('headerHeight')\n  const style = { ...topItemListStyle, marginTop: `${headerHeight}px` }\n  const context = useEmitterValue('context')\n  return createElement(TopItemList || 'div', { style, context }, children)\n}\n\nconst ListRoot: FC<ListRootProps> = React.memo(function VirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const showTopList = useEmitterValue('topItemsIndexes').length > 0\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        <Header />\n        <Items />\n        <Footer />\n      </TheViewport>\n      {showTopList && (\n        <TopItemListContainer>\n          <Items showTopList={true} />\n        </TopItemListContainer>\n      )}\n    </TheScroller>\n  )\n})\n\nexport type ListHandle = RefHandle<typeof List>\n\nexport const {\n  Component: List,\n  usePublisher,\n  useEmitterValue,\n  useEmitter,\n} = systemToComponent(\n  combinedSystem,\n  {\n    required: {},\n    optional: {\n      context: 'context',\n      followOutput: 'followOutput',\n      firstItemIndex: 'firstItemIndex',\n      itemContent: 'itemContent',\n      groupContent: 'groupContent',\n      overscan: 'overscan',\n      increaseViewportBy: 'increaseViewportBy',\n      totalCount: 'totalCount',\n      topItemCount: 'topItemCount',\n      initialTopMostItemIndex: 'initialTopMostItemIndex',\n      components: 'components',\n      groupCounts: 'groupCounts',\n      atBottomThreshold: 'atBottomThreshold',\n      computeItemKey: 'computeItemKey',\n      defaultItemHeight: 'defaultItemHeight',\n      fixedItemHeight: 'fixedItemHeight',\n      itemSize: 'itemSize',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      headerFooterTag: 'headerFooterTag',\n      data: 'data',\n      initialItemCount: 'initialItemCount',\n      initialScrollTop: 'initialScrollTop',\n      alignToBottom: 'alignToBottom',\n      useWindowScroll: 'useWindowScroll',\n      customScrollParent: 'customScrollParent',\n      scrollerRef: 'scrollerRef',\n      logLevel: 'logLevel',\n\n      // deprecated\n      item: 'item',\n      group: 'group',\n      topItems: 'topItems',\n      itemHeight: 'itemHeight',\n      scrollingStateChange: 'scrollingStateChange',\n      maxHeightCacheSize: 'maxHeightCacheSize',\n      footer: 'footer',\n      header: 'header',\n      ItemContainer: 'ItemContainer',\n      ScrollContainer: 'ScrollContainer',\n      ListContainer: 'ListContainer',\n      GroupContainer: 'GroupContainer',\n      emptyComponent: 'emptyComponent',\n      HeaderContainer: 'HeaderContainer',\n      FooterContainer: 'FooterContainer',\n      scrollSeek: 'scrollSeek',\n    },\n    methods: {\n      scrollToIndex: 'scrollToIndex',\n      scrollIntoView: 'scrollIntoView',\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n      adjustForPrependedItems: 'adjustForPrependedItems',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n      totalListHeightChanged: 'totalListHeightChanged',\n      itemsRendered: 'itemsRendered',\n      groupIndices: 'groupIndices',\n    },\n  },\n  ListRoot\n)\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n","import { RefHandle, systemToComponent } from '@virtuoso.dev/react-urx'\n\nimport * as u from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { createElement, FC } from 'react'\nimport { gridSystem } from './gridSystem'\nimport useSize from './hooks/useSize'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\nimport { GridComponents, GridComputeItemKey, GridItemContent, GridRootProps } from './interfaces'\nimport { addDeprecatedAlias, buildScroller, buildWindowScroller, contextPropIfNotDomElement, identity, viewportStyle } from './List'\n\nconst gridComponentPropsSystem = u.system(() => {\n  const itemContent = u.statefulStream<GridItemContent<any>>((index) => `Item ${index}`)\n  const components = u.statefulStream<GridComponents>({})\n  const context = u.statefulStream<unknown>(null)\n  const itemClassName = u.statefulStream('virtuoso-grid-item')\n  const listClassName = u.statefulStream('virtuoso-grid-list')\n  const computeItemKey = u.statefulStream<GridComputeItemKey>(identity)\n  const scrollerRef = u.statefulStream<(ref: HTMLElement | null) => void>(u.noop)\n\n  const distinctProp = <K extends keyof GridComponents>(propName: K, defaultValue: GridComponents[K] | null | 'div' = null) => {\n    return u.statefulStreamFromEmitter(\n      u.pipe(\n        components,\n        u.map((components) => components[propName]),\n        u.distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    context,\n    itemContent,\n    components,\n    computeItemKey,\n    itemClassName,\n    listClassName,\n    scrollerRef,\n    ListComponent: distinctProp('List', 'div'),\n    ItemComponent: distinctProp('Item', 'div'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder', 'div'),\n  }\n})\n\nconst combinedSystem = u.system(([gridSystem, gridComponentPropsSystem]) => {\n  const deprecatedProps = {\n    item: addDeprecatedAlias(gridComponentPropsSystem.itemContent, 'Rename the %citem%c prop to %citemContent.'),\n    ItemContainer: u.stream<any>(),\n    ScrollContainer: u.stream<any>(),\n    ListContainer: u.stream<any>(),\n    emptyComponent: u.stream<any>(),\n    scrollSeek: u.stream<any>(),\n  }\n\n  function deprecateComponentProp(stream: u.Stream<any>, componentName: string, propName: string) {\n    u.connect(\n      u.pipe(\n        stream,\n        u.withLatestFrom(gridComponentPropsSystem.components),\n        u.map(([comp, components]) => {\n          console.warn(`react-virtuoso: ${propName} property is deprecated. Pass components.${componentName} instead.`)\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          return { ...components, [componentName]: comp }\n        })\n      ),\n      gridComponentPropsSystem.components\n    )\n  }\n\n  u.subscribe(deprecatedProps.scrollSeek, ({ placeholder, ...config }) => {\n    console.warn(\n      `react-virtuoso: scrollSeek property is deprecated. Pass scrollSeekConfiguration and specify the placeholder in components.ScrollSeekPlaceholder instead.`\n    )\n    u.publish(gridComponentPropsSystem.components, {\n      ...u.getValue(gridComponentPropsSystem.components),\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      ScrollSeekPlaceholder: placeholder,\n    })\n    u.publish(gridSystem.scrollSeekConfiguration, config)\n  })\n\n  deprecateComponentProp(deprecatedProps.ItemContainer, 'Item', 'ItemContainer')\n  deprecateComponentProp(deprecatedProps.ListContainer, 'List', 'ListContainer')\n  deprecateComponentProp(deprecatedProps.ScrollContainer, 'Scroller', 'ScrollContainer')\n\n  return { ...gridSystem, ...gridComponentPropsSystem, ...deprecatedProps }\n}, u.tup(gridSystem, gridComponentPropsSystem))\n\nconst GridItems: FC = React.memo(function GridItems() {\n  const gridState = useEmitterValue('gridState')\n  const listClassName = useEmitterValue('listClassName')\n  const itemClassName = useEmitterValue('itemClassName')\n  const itemContent = useEmitterValue('itemContent')\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const scrollHeightCallback = usePublisher('scrollHeight')\n  const ItemComponent = useEmitterValue('ItemComponent')!\n  const ListComponent = useEmitterValue('ListComponent')!\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder')!\n  const context = useEmitterValue('context')\n  const itemDimensions = usePublisher('itemDimensions')\n\n  const listRef = useSize((el) => {\n    const scrollHeight = el.parentElement!.parentElement!.scrollHeight\n    scrollHeightCallback(scrollHeight)\n    const firstItem = el.firstChild as HTMLElement\n    if (firstItem) {\n      itemDimensions(firstItem.getBoundingClientRect())\n    }\n  })\n\n  return createElement(\n    ListComponent,\n    {\n      ref: listRef,\n      className: listClassName,\n      ...contextPropIfNotDomElement(ListComponent, context),\n      style: { paddingTop: gridState.offsetTop, paddingBottom: gridState.offsetBottom },\n    },\n    gridState.items.map((item) => {\n      const key = computeItemKey(item.index)\n      return isSeeking\n        ? createElement(ScrollSeekPlaceholder, {\n            key,\n            ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n            index: item.index,\n            height: gridState.itemHeight,\n            width: gridState.itemWidth,\n          })\n        : createElement(\n            ItemComponent,\n            { ...contextPropIfNotDomElement(ItemComponent, context), className: itemClassName, 'data-index': item.index, key },\n            itemContent(item.index, context)\n          )\n    })\n  )\n})\n\nconst Viewport: FC = ({ children }) => {\n  const viewportDimensions = usePublisher('viewportDimensions')\n\n  const viewportRef = useSize((el) => {\n    viewportDimensions(el.getBoundingClientRect())\n  })\n\n  return (\n    <div style={viewportStyle} ref={viewportRef}>\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC = ({ children }) => {\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent)\n\n  return (\n    <div ref={viewportRef} style={viewportStyle}>\n      {children}\n    </div>\n  )\n}\n\nconst GridRoot: FC<GridRootProps> = React.memo(function GridRoot({ ...props }) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport\n\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        <GridItems />\n      </TheViewport>\n    </TheScroller>\n  )\n})\n\nconst {\n  Component: Grid,\n  usePublisher,\n  useEmitterValue,\n  useEmitter,\n} = systemToComponent(\n  combinedSystem,\n  {\n    optional: {\n      totalCount: 'totalCount',\n      overscan: 'overscan',\n      itemContent: 'itemContent',\n      components: 'components',\n      computeItemKey: 'computeItemKey',\n      initialItemCount: 'initialItemCount',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      listClassName: 'listClassName',\n      itemClassName: 'itemClassName',\n      useWindowScroll: 'useWindowScroll',\n      customScrollParent: 'customScrollParent',\n      scrollerRef: 'scrollerRef',\n\n      // deprecated\n      item: 'item',\n      ItemContainer: 'ItemContainer',\n      ScrollContainer: 'ScrollContainer',\n      ListContainer: 'ListContainer',\n      scrollSeek: 'scrollSeek',\n    },\n    methods: {\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n      scrollToIndex: 'scrollToIndex',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n    },\n  },\n  GridRoot\n)\n\nexport type foo<T> = T extends React.ForwardRefExoticComponent<React.RefAttributes<infer Handle>> ? Handle : never\n\nexport type GridHandle = RefHandle<typeof Grid>\nexport { Grid }\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n","import { RefHandle, systemToComponent } from '@virtuoso.dev/react-urx'\nimport { map, pipe, statefulStream, system, tup, statefulStreamFromEmitter, distinctUntilChanged, noop, compose } from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { createElement, FC } from 'react'\nimport useChangedListContentsSizes from './hooks/useChangedChildSizes'\nimport { ComputeItemKey, ItemContent, FixedHeaderContent, TableComponents, TableRootProps } from './interfaces'\nimport { listSystem } from './listSystem'\nimport { identity, buildScroller, buildWindowScroller, viewportStyle, contextPropIfNotDomElement } from './List'\nimport useSize from './hooks/useSize'\nimport { correctItemSize } from './utils/correctItemSize'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\n\nconst tableComponentPropsSystem = system(() => {\n  const itemContent = statefulStream<ItemContent<any, unknown>>((index: number) => <td>Item ${index}</td>)\n  const context = statefulStream<unknown>(null)\n  const fixedHeaderContent = statefulStream<FixedHeaderContent>(null)\n  const components = statefulStream<TableComponents>({})\n  const computeItemKey = statefulStream<ComputeItemKey<any, unknown>>(identity)\n  const scrollerRef = statefulStream<(ref: HTMLElement | Window | null) => void>(noop)\n\n  const distinctProp = <K extends keyof TableComponents>(\n    propName: K,\n    defaultValue: TableComponents[K] | null | 'thead' | 'table' | 'tbody' | 'tr' | 'div' = null\n  ) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components) => components[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    context,\n    itemContent,\n    fixedHeaderContent,\n    components,\n    computeItemKey,\n    scrollerRef,\n    TableComponent: distinctProp('Table', 'table'),\n    TableHeadComponent: distinctProp('TableHead', 'thead'),\n    TableBodyComponent: distinctProp('TableBody', 'tbody'),\n    TableRowComponent: distinctProp('TableRow', 'tr'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    EmptyPlaceholder: distinctProp('EmptyPlaceholder'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder'),\n  }\n})\n\nconst combinedSystem = system(([listSystem, propsSystem]) => {\n  return { ...listSystem, ...propsSystem }\n}, tup(listSystem, tableComponentPropsSystem))\n\nconst DefaultScrollSeekPlaceholder = ({ height }: { height: number }) => (\n  <tr>\n    <td style={{ height }}></td>\n  </tr>\n)\n\nconst FillerRow = ({ height }: { height: number }) => (\n  <tr>\n    <td style={{ height: height, padding: 0, border: 0 }}></td>\n  </tr>\n)\n\nexport const Items = React.memo(function VirtuosoItems() {\n  const listState = useEmitterValue('listState')\n  const deviation = useEmitterValue('deviation')\n  const sizeRanges = usePublisher('sizeRanges')\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const windowScrollContainerStateCallback = usePublisher('windowScrollContainerState')\n  const _scrollContainerStateCallback = usePublisher('scrollContainerState')\n  const scrollContainerStateCallback =\n    customScrollParent || useWindowScroll ? windowScrollContainerStateCallback : _scrollContainerStateCallback\n  const itemContent = useEmitterValue('itemContent')\n  const trackItemSizes = useEmitterValue('trackItemSizes')\n  const itemSize = useEmitterValue('itemSize')\n  const log = useEmitterValue('log')\n\n  const ref = useChangedListContentsSizes(sizeRanges, itemSize, trackItemSizes, scrollContainerStateCallback, log, customScrollParent)\n  const EmptyPlaceholder = useEmitterValue('EmptyPlaceholder')\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder') || DefaultScrollSeekPlaceholder\n  const TableBodyComponent = useEmitterValue('TableBodyComponent')!\n  const TableRowComponent = useEmitterValue('TableRowComponent')!\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const paddingTopAddition = useEmitterValue('paddingTopAddition')\n  const firstItemIndex = useEmitterValue('firstItemIndex')\n  const statefulTotalCount = useEmitterValue('statefulTotalCount')\n  const context = useEmitterValue('context')\n\n  if (statefulTotalCount === 0 && EmptyPlaceholder) {\n    return createElement(EmptyPlaceholder, contextPropIfNotDomElement(EmptyPlaceholder, context))\n  }\n\n  const paddingTop = listState.offsetTop + paddingTopAddition + deviation\n  const paddingBottom = listState.offsetBottom\n\n  const paddingTopEl = paddingTop > 0 ? <FillerRow height={paddingTop} key=\"padding-top\" /> : null\n\n  const paddingBottomEl = paddingBottom > 0 ? <FillerRow height={paddingBottom} key=\"padding-bottom\" /> : null\n\n  const items = listState.items.map((item) => {\n    const index = item.originalIndex!\n    const key = computeItemKey(index + firstItemIndex, item.data, context)\n\n    if (isSeeking) {\n      return createElement(ScrollSeekPlaceholder, {\n        ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n        key,\n        index: item.index,\n        height: item.size,\n        type: item.type || 'item',\n      })\n    }\n    return createElement(\n      TableRowComponent,\n      {\n        ...contextPropIfNotDomElement(TableRowComponent, context),\n        key,\n        'data-index': index,\n        'data-known-size': item.size,\n        'data-item-index': item.index,\n        style: { overflowAnchor: 'none' },\n      } as any,\n      itemContent(item.index, item.data, context)\n    )\n  })\n\n  return createElement(\n    TableBodyComponent,\n    { ref, 'data-test-id': 'virtuoso-item-list', ...contextPropIfNotDomElement(TableBodyComponent, context) },\n    [paddingTopEl, ...items, paddingBottomEl]\n  )\n})\n\nexport interface Hooks {\n  usePublisher: typeof usePublisher\n  useEmitterValue: typeof useEmitterValue\n  useEmitter: typeof useEmitter\n}\n\nconst Viewport: FC = ({ children }) => {\n  const viewportHeight = usePublisher('viewportHeight')\n  const viewportRef = useSize(compose(viewportHeight, (el) => correctItemSize(el, 'height')))\n\n  return (\n    <div style={viewportStyle} ref={viewportRef} data-viewport-type=\"element\">\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC = ({ children }) => {\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent)\n\n  return (\n    <div ref={viewportRef} style={viewportStyle} data-viewport-type=\"window\">\n      {children}\n    </div>\n  )\n}\n\nconst TableRoot: FC<TableRootProps> = React.memo(function TableVirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const fixedHeaderHeight = usePublisher('fixedHeaderHeight')\n  const fixedHeaderContent = useEmitterValue('fixedHeaderContent')\n  const context = useEmitterValue('context')\n  const theadRef = useSize(compose(fixedHeaderHeight, (el) => correctItemSize(el, 'height')))\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport\n  const TheTable = useEmitterValue('TableComponent')\n  const TheTHead = useEmitterValue('TableHeadComponent')\n\n  const theHead = fixedHeaderContent\n    ? React.createElement(\n        TheTHead!,\n        {\n          key: 'TableHead',\n          style: { zIndex: 1, position: 'sticky', top: 0 },\n          ref: theadRef,\n          ...contextPropIfNotDomElement(TheTHead, context),\n        } as any,\n        fixedHeaderContent()\n      )\n    : null\n\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        {React.createElement(TheTable!, { style: { borderSpacing: 0 }, ...contextPropIfNotDomElement(TheTable, context) } as any, [\n          theHead,\n          <Items key=\"TableBody\" />,\n        ])}\n      </TheViewport>\n    </TheScroller>\n  )\n})\n\nexport type TableHandle = RefHandle<typeof Table>\n\nexport const {\n  Component: Table,\n  usePublisher,\n  useEmitterValue,\n  useEmitter,\n} = systemToComponent(\n  combinedSystem,\n  {\n    required: {},\n    optional: {\n      context: 'context',\n      followOutput: 'followOutput',\n      firstItemIndex: 'firstItemIndex',\n      itemContent: 'itemContent',\n      fixedHeaderContent: 'fixedHeaderContent',\n      overscan: 'overscan',\n      increaseViewportBy: 'increaseViewportBy',\n      totalCount: 'totalCount',\n      topItemCount: 'topItemCount',\n      initialTopMostItemIndex: 'initialTopMostItemIndex',\n      components: 'components',\n      groupCounts: 'groupCounts',\n      atBottomThreshold: 'atBottomThreshold',\n      computeItemKey: 'computeItemKey',\n      defaultItemHeight: 'defaultItemHeight',\n      fixedItemHeight: 'fixedItemHeight',\n      itemSize: 'itemSize',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      data: 'data',\n      initialItemCount: 'initialItemCount',\n      initialScrollTop: 'initialScrollTop',\n      alignToBottom: 'alignToBottom',\n      useWindowScroll: 'useWindowScroll',\n      customScrollParent: 'customScrollParent',\n      scrollerRef: 'scrollerRef',\n      logLevel: 'logLevel',\n    },\n    methods: {\n      scrollToIndex: 'scrollToIndex',\n      scrollIntoView: 'scrollIntoView',\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n      totalListHeightChanged: 'totalListHeightChanged',\n      itemsRendered: 'itemsRendered',\n      groupIndices: 'groupIndices',\n    },\n  },\n  TableRoot\n)\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n","import { ForwardRefExoticComponent, ReactElement, Ref } from 'react'\nimport { Grid, GridHandle } from './Grid'\n\nimport {\n  Components,\n  ComputeItemKey,\n  FollowOutput,\n  GridComponents,\n  GridComputeItemKey,\n  GridItemContent,\n  GroupContent,\n  GroupItemContent,\n  IndexLocationWithAlign,\n  ItemContent,\n  ListItem,\n  ListRange,\n  ScrollSeekConfiguration,\n  TableComponents,\n  FixedHeaderContent,\n} from './interfaces'\nimport { List, ListHandle } from './List'\nimport { Table, TableHandle } from './Table'\nimport { ScrollIntoViewLocation } from './scrollIntoViewSystem'\ntype CompProps<T> = T extends ForwardRefExoticComponent<infer R> ? R : never\ntype ListProps = CompProps<typeof List>\ntype GridProps = CompProps<typeof Grid>\n\nexport interface VirtuosoProps<D, C> extends Omit<ListProps, 'groupCounts' | 'groupContent' | 'itemsRendered'> {\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount?: number\n\n  /**\n   * The data items to be rendered. If data is set, the total count will be inferred from the length of the array.\n   */\n  data?: readonly D[]\n\n  /**\n   * Additional context available in the custom components and content callbacks\n   */\n  context?: C\n\n  /**\n   * *The property accepts pixel values.*\n   *\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   * See the `increaseViewportBy` property for a similar behavior (equivalent to the `overscan` in react-window).\n   *\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   *\n   * *The property accepts pixel values.*\n   *\n   * Set the increaseViewportBy property to artificially increase the viewport size, causing items to be rendered before outside of the viewport.\n   * The property causes the component to render more items than the necessary, but can help with slow loading content.\n   * Using `{ top?: number, bottom?: number }` lets you set the increase for each end separately.\n   *\n   */\n  increaseViewportBy?: number | { top: number; bottom: number }\n\n  /**\n   * Set the amount of items to remain fixed at the top of the list.\n   *\n   * For a header that scrolls away when scrolling, check the `components.Header` property.\n   */\n  topItemCount?: number\n\n  /**\n   * Set to a value between 0 and totalCount - 1 to make the list start scrolled to that item.\n   * Pass in an object to achieve additional effects similar to `scrollToIndex`.\n   */\n  initialTopMostItemIndex?: number | IndexLocationWithAlign\n\n  /**\n   * Set this value to offset the initial location of the list.\n   * Warning: using this property will still run a render cycle at the scrollTop: 0 list window.\n   * If possible, avoid using it and stick to `initialTopMostItemIndex` instead.\n   */\n  initialScrollTop?: number\n\n  /**\n   * Use for server-side rendering - if set, the list will render the specified amount of items\n   * regardless of the container / item size.\n   */\n  initialItemCount?: number\n\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the list.\n   */\n  components?: Components<C>\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: ItemContent<D, C>\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: ComputeItemKey<D, C>\n\n  /**\n   * By default, the component assumes the default item height from the first rendered item (rendering it as a \"probe\").\n   *\n   * If the first item turns out to be an outlier (very short or tall), the rest of the rendering will be slower,\n   * as multiple passes of rendering should happen for the list to fill the viewport.\n   *\n   * Setting `defaultItemHeight` causes the component to skip the \"probe\" rendering and use the property\n   * value as default height instead.\n   */\n  defaultItemHeight?: number\n\n  /**\n   * Allows customizing the height/width calculation of `Item` elements.\n   *\n   * The default implementation reads `el.getBoundingClientRect().height` and `el.getBoundingClientRect().width`.\n   */\n  itemSize?: (el: HTMLElement, field: 'offsetHeight' | 'offsetWidth') => number\n\n  /**\n   * Can be used to improve performance if the rendered items are of known size.\n   * Setting it causes the component to skip item measurements.\n   */\n  fixedItemHeight?: number\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * If set to `true`, the list automatically scrolls to bottom if the total count is changed.\n   * Set to `\"smooth\"` for an animated scrolling.\n   *\n   * By default, `followOutput` scrolls down only if the list is already at the bottom.\n   * To implement an arbitrary logic behind that, pass a function:\n   *\n   * ```tsx\n   * <Virtuoso\n   *  followOutput={(isAtBottom: boolean) => {\n   *    if (expression) {\n   *      return 'smooth' // can be 'auto' or false to avoid scrolling\n   *    } else {\n   *      return false\n   *    }\n   *  }} />\n   * ```\n   */\n  followOutput?: FollowOutput\n\n  /**\n   * Set to customize the wrapper tag for the header and footer components (default is `div`).\n   */\n  headerFooterTag?: string\n\n  /**\n   * Use when implementing inverse infinite scrolling - decrease the value this property\n   * in combination with  `data` or `totalCount` to prepend items to the top of the list.\n   *\n   * Warning: the firstItemIndex should **be a positive number**, based on the total amount of items to be displayed.\n   */\n  firstItemIndex?: number\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Called when the total list height is changed due to new items or viewport resize.\n   */\n  totalListHeightChanged?: (height: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  itemsRendered?: (items: ListItem<D>[]) => void\n\n  /**\n   * Setting `alignToBottom` to `true` aligns the items to the bottom of the list if the list is shorter than the viewport.\n   * Use `followOutput` property to keep the list aligned when new items are appended.\n   */\n  alignToBottom?: boolean\n\n  /**\n   * Uses the document scroller rather than wrapping the list in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Pass a reference to a scrollable parent element, so that the list won't wrap in its own.\n   */\n  customScrollParent?: HTMLElement\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | Window | null) => any\n\n  /**\n   * By default `4`. Redefine to change how much away from the bottom the scroller can be before the list is not considered not at bottom.\n   */\n  atBottomThreshold?: number\n}\n\nexport interface GroupedVirtuosoProps<D, C>\n  extends Omit<VirtuosoProps<D, C>, 'totalCount' | 'itemContent'>,\n    Pick<ListProps, 'groupCounts' | 'groupContent'> {\n  /**\n   * Specifies the amount of items in each group (and, actually, how many groups are there).\n   * For example, passing [20, 30] will display 2 groups with 20 and 30 items each.\n   */\n  groupCounts?: number[]\n\n  /**\n   * Specifies how each each group header gets rendered. The callback receives the zero-based index of the group.\n   */\n  groupContent?: GroupContent\n\n  /**\n   * Specifies how each each item gets rendered.\n   */\n  itemContent?: GroupItemContent<D, C>\n}\n\nexport interface TableVirtuosoProps<D, C> extends Omit<VirtuosoProps<D, C>, 'components' | 'headerFooterTag' | 'topItemCount'> {\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the table.\n   */\n  components?: TableComponents<C>\n  /**\n   * Set the contents of the table header.\n   */\n  fixedHeaderContent?: FixedHeaderContent\n\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount?: number\n\n  /**\n   * The data items to be rendered. If data is set, the total count will be inferred from the length of the array.\n   */\n  data?: readonly D[]\n\n  /**\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   * See the `increaseViewportBy` property for a similar behavior (equivalent to the `overscan` in `react-window`).\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   * Set the increaseViewportBy property to artificially increase the viewport size, causing items to be rendered before outside of the viewport.\n   * The property causes the component to render more items than the necessary, but can help with slow loading content.\n   * Using `{ top?: number, bottom?: number }` lets you set the increase for each end separately.\n   */\n  increaseViewportBy?: number | { top: number; bottom: number }\n\n  /**\n   * Set to a value between 0 and totalCount - 1 to make the list start scrolled to that item.\n   */\n  initialTopMostItemIndex?: number\n\n  /**\n   * Set this value to offset the initial location of the list.\n   * Warning: using this property will still run a render cycle at the scrollTop: 0 list window.\n   * If possible, avoid using it and stick to `initialTopMostItemIndex` instead.\n   */\n  initialScrollTop?: number\n\n  /**\n   * Use for server-side rendering - if set, the list will render the specified amount of items\n   * regardless of the container / item size.\n   */\n  initialItemCount?: number\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: ItemContent<D, C>\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: ComputeItemKey<D, C>\n\n  /**\n   * By default, the component assumes the default item height from the first rendered item (rendering it as a \"probe\").\n   *\n   * If the first item turns out to be an outlier (very short or tall), the rest of the rendering will be slower,\n   * as multiple passes of rendering should happen for the list to fill the viewport.\n   *\n   * Setting `defaultItemHeight` causes the component to skip the \"probe\" rendering and use the property\n   * value as default height instead.\n   */\n  defaultItemHeight?: number\n\n  /**\n   * Allows customizing the height/width calculation of `Item` elements.\n   *\n   * The default implementation reads `el.getBoundingClientRect().height` and `el.getBoundingClientRect().width`.\n   */\n  itemSize?: (el: HTMLElement, field: 'offsetHeight' | 'offsetWidth') => number\n\n  /**\n   * Can be used to improve performance if the rendered items are of known size.\n   * Setting it causes the component to skip item measurements.\n   */\n  fixedItemHeight?: number\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * If set to `true`, the list automatically scrolls to bottom if the total count is changed.\n   * Set to `\"smooth\"` for an animated scrolling.\n   *\n   * By default, `followOutput` scrolls down only if the list is already at the bottom.\n   * To implement an arbitrary logic behind that, pass a function:\n   *\n   * ```tsx\n   * <Virtuoso\n   *  followOutput={(isAtBottom: boolean) => {\n   *    if (expression) {\n   *      return 'smooth' // can be 'auto' or false to avoid scrolling\n   *    } else {\n   *      return false\n   *    }\n   *  }} />\n   * ```\n   */\n  followOutput?: FollowOutput\n\n  /**\n   * Use when implementing inverse infinite scrolling - decrease the value this property\n   * in combination with  `data` or `totalCount` to prepend items to the top of the list.\n   *\n   * Warning: the firstItemIndex should **be a positive number**, based on the total amount of items to be displayed.\n   */\n  firstItemIndex?: number\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Called when the total list height is changed due to new items or viewport resize.\n   */\n  totalListHeightChanged?: (height: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  itemsRendered?: (items: ListItem<D>[]) => void\n\n  /**\n   * Setting `alignToBottom` to `true` aligns the items to the bottom of the list if the list is shorter than the viewport.\n   * Use `followOutput` property to keep the list aligned when new items are appended.\n   */\n  alignToBottom?: boolean\n\n  /**\n   * Uses the document scroller rather than wrapping the list in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Pass a reference to a scrollable parent element, so that the table won't wrap in its own.\n   */\n  customScrollParent?: HTMLElement\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | Window | null) => any\n\n  /**\n   * By default `4`. Redefine to change how much away from the bottom the scroller can be before the list is not considered not at bottom.\n   */\n  atBottomThreshold?: number\n}\n\nexport interface VirtuosoGridProps<C extends unknown = unknown> extends GridProps {\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount: number\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: GridItemContent<C>\n\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the list.\n   */\n  components?: GridComponents<C>\n\n  /**\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: GridComputeItemKey\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | null) => any\n\n  /**\n   * Sets the className for the list DOM element\n   */\n  listClassName?: string\n\n  /**\n   * Sets the grid items' className\n   */\n  itemClassName?: string\n\n  /**\n   * Uses the document scroller rather than wrapping the grid in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Pass a reference to a scrollable parent element, so that the grid won't wrap in its own.\n   */\n  customScrollParent?: HTMLElement\n}\n\nexport interface VirtuosoHandle extends ListHandle {\n  /**\n   * Scrolls the component to the specified item index. See {{IndexLocationWithAlign}} for more options.\n   */\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  /**\n   * Scrolls the item into view if necessary. See [the website example](http://virtuoso.dev/keyboard-navigation/) for an implementation.\n   */\n  scrollIntoView(location: ScrollIntoViewLocation): void\n  /**\n   * Scrolls the component to the specified location. See [ScrollToOptions (MDN)](https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions)\n   */\n  scrollTo(location: ScrollToOptions): void\n  /**\n   * Scrolls the component with the specified amount. See [ScrollToOptions (MDN)](https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions)\n   */\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport interface GroupedVirtuosoHandle extends ListHandle {\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  scrollTo(location: ScrollToOptions): void\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport interface VirtuosoGridHandle extends GridHandle {\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  scrollTo(location: ScrollToOptions): void\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport const Virtuoso = List as <ItemData extends unknown = any, Context extends unknown = any>(\n  props: VirtuosoProps<ItemData, Context> & { ref?: Ref<VirtuosoHandle> }\n) => ReactElement\n\nexport const GroupedVirtuoso = List as <ItemData extends unknown = any, Context extends unknown = any>(\n  props: GroupedVirtuosoProps<ItemData, Context> & { ref?: Ref<GroupedVirtuosoHandle> }\n) => ReactElement\n\nexport const TableVirtuoso = Table as <ItemData extends unknown = any, Context extends unknown = any>(\n  props: TableVirtuosoProps<ItemData, Context> & { ref?: Ref<TableHandle> }\n) => ReactElement\n\nexport const VirtuosoGrid = Grid as <Context extends unknown = any>(\n  props: VirtuosoGridProps<Context> & { ref?: Ref<VirtuosoGridHandle> }\n) => ReactElement\n"],"names":["tupleComparator","prev","current","rangeComparator","next","startIndex","endIndex","LogLevel","domIOSystem","u","system","scrollContainerState","stream","scrollTop","deviation","statefulStream","smoothScrollTargetReached","statefulScrollTop","viewportHeight","scrollHeight","headerHeight","footerHeight","scrollTo","scrollBy","scrollingInProgress","connect","pipe","map","_ref","_ref2","singleton","CONSOLE_METHOD_MAP","DEBUG","INFO","_CONSOLE_METHOD_MAP","WARN","ERROR","loggerSystem","logLevel","log","label","message","level","_getGlobalThis$VIRTUO","globalThis","window","getValue","console","propsReadySystem","propsReady","didMount","streamFromEmitter","filter","ready","distinctUntilChanged","subscribe","value","tup","UP","INITIAL_BOTTOM_STATE","atBottom","notAtBottomBecause","state","offsetBottom","stateFlagsSystem","_ref$","isAtBottom","isAtTop","atBottomStateChange","atTopStateChange","atBottomThreshold","isScrolling","merge","duc","skip","mapTo","debounceTime","isScrollingBy","statefulStreamFromEmitter","top","atBottomState","combineLatest","scan","atBottomBecause","scrollTopDelta","_ref2$","_headerHeight","lastJumpDueToItemResize","_ref3","jump","changed","throttleTime","scrollDirection","acc","direction","prevScrollTop","scrollVelocity","withLatestFrom","_","_ref5","_ref6","_ref7","_ref8","scrollSeekSystem","isSeeking","rangeChanged","scrollSeekConfiguration","speed","config","range","enter","exit","velocity","change","scrollSeekRangeChanged","NIL_NODE","lvl","newAANode","k","v","l","r","empty","node","newTree","remove","key","last","adjust","clone","_last","deleteLast","findMaxKeyValue","field","Infinity","undefined","insert","split","skew","rebalance","walkWithin","start","end","result","concat","push","walk","args","isSingle","Error","rl","rlvl","rangesWithin","arrayToRanges","index","items","parser","length","_parser","i","nextIndex","nextValue","_parser2","findIndexOfClosestSmallerOrEqual","comparator","Math","floor","match","join","findClosestSmallerOrEqual","correctItemSize","el","dimension","round","getBoundingClientRect","rangeIncludes","refRange","size","indexComparator","itemIndex","offsetComparator","offset","itemOffset","offsetPointParser","point","createOffsetTree","prevOffsetTree","syncStart","sizeTree","offsetTree","prevIndex","prevSize","prevOffset","arrayBinarySearch","kv","slice","_step3","_iterator3","_createForOfIteratorHelperLoose","done","aOffset","lastIndex","lastOffset","lastSize","sizeStateReducer","ranges","groupIndices","newSizeTree","groupSize","itemSize","reduce","tree","groupIndex","insertRanges","_step","_iterator","min","overlappingRanges","some","_step2","firstPassDone","shouldInsert","_iterator2","_step2$value","rangeStart","rangeEnd","rangeValue","newOffsetTree","_createOffsetTree","groupOffsetTree","offsetOf","_arrayBinarySearch$fi","originalIndexFromItemIndex","sizes","hasGroups","groupOffset","SIZE_MAP","offsetHeight","offsetWidth","sizeSystem","_ref4","sizeRanges","totalCount","statefulTotalCount","unshiftWith","shiftWith","firstItemIndex","fixedItemSize","defaultItemSize","data","initial","indexes","idx","_extends","trackItemSizes","listRefresh","_ref9","oldSizes","newSizes","diff","val","publish","_ref10","beforeUnshiftWith","_ref11","_ref12","shiftWithOffset","_ref13","_ref14","_ref15","max","SUPPORTS_SCROLL_TO_OPTIONS","document","documentElement","style","normalizeIndexLocation","location","align","behavior","scrollToIndexSystem","_ref$2","scrollToIndex","topListHeight","unsubscribeNextListRefresh","cleartTimeoutRef","unsubscribeListRefresh","cleanup","clearTimeout","normalLocation","retry","listChanged","handleNext","timeoutRef","setTimeout","getOverscan","overscan","main","reverse","getViewportIncrease","sizeRangeSystem","listBoundary","fixedHeaderHeight","increaseViewportBy","visibleRange","listTop","listBottom","stickyHeaderHeight","headerVisible","topViewportAddition","bottomViewportAddition","windowScrollerSystem","windowScrollContainerState","windowViewportRect","windowScrollTo","useWindowScroll","customScrollParent","offsetTop","INITIAL_GRID_STATE","bottom","itemHeight","itemWidth","PROBE_GRID_STATE","ceil","buildItems","Array","from","gridSystem","stateFlags","scrollSeek","_ref$3","_ref$4","initialItemCount","gridState","viewportDimensions","height","width","itemDimensions","_ref4$","_ref4$$","startOffset","endOffset","item","viewport","viewportWidth","perRow","itemsPerRow","_gridLayout","gridLayout","endReached","startReached","itemTop","totalListHeight","viewportInfo","visibleWidth","visibleHeight","useSizeWithElRef","callback","enabled","ref","useRef","callbackRef","_el","ResizeObserver","observer","entries","element","target","offsetParent","elRef","observe","unobserve","useSize","useWindowViewportRectRef","calculateInfo","useCallback","rect","customScrollParentRect","deltaTop","innerHeight","pageYOffset","_useSizeWithElRef","scrollAndResizeEventHandler","useEffect","addEventListener","removeEventListener","useIsomorphicLayoutEffect","useLayoutEffect","useChangedListContentsSizes","scrollContainerStateCallback","children","results","child","dataset","parseInt","knownSize","parseFloat","lastResult","getChangedChildSizes","scrollableElement","parentElement","firstElementChild","useScrollTop","scrollerElement","scrollerRefCallback","noop","scrollerRef","scrollTopTarget","handler","ev","localRef","passive","scrollByCallback","scrollToCallback","isSmooth","abs","initialTopMostItemIndexSystem","scrolledToInitialItem","initialTopMostItemIndex","normalizeFollowOutput","follow","followOutputSystem","followOutput","pendingScrollHandle","scrollToBottom","followOutputBehavior","shouldFollow","behaviorFromFollowOutput","refreshed","cancel","groupCountsToIndicesAndCount","counts","groupCount","groupedListSystem","groupCounts","topItemsIndexes","groupIndicesAndCount","prop","EMPTY_LIST_STATE","topItems","transposeItems","originalIndex","transposedItems","groupRanges","currentRange","currentGroupIndex","shift","indexOf","type","buildListState","lastItem","listStateSystem","func","called","rangeTopListHeight","itemsRendered","listState","_ref3$","sizesValue","probeItemSet","getInitialTopMostItemIndexNumber","rangeStartIndex","rangeEndIndex","minStartIndex","offsetPointRanges","endValue","findRange","rangesWithinOffsets","maxIndex","tap","count","initialItemCountSystem","_ref3$2","includedGroupsCount","adjustedCount","topItemCountSystem","topItemCount","totalListHeightSystem","totalListHeightChanged","upwardScrollFixSystem","deviationOffset","prevItems","newDev","onlyItem","prevItem","find","pItem","_ret","_loop","amount","initialScrollTopSystem","initialScrollTop","alignToBottomSystem","alignToBottom","paddingTopAddition","scrollIntoViewSystem","scrollIntoView","_ref2$$behavior","featureGroup1System","listSystem","_ref2$2","domIO","_ref2$3","flags","featureGroup1","fixedItemHeight","defaultItemHeight","positionStickyCssValue","createElement","position","_excluded","_excluded2","_excluded3","identity","listComponentPropsSystem","itemContent","context","groupContent","components","computeItemKey","headerFooterTag","distinctProp","propName","defaultValue","FooterComponent","HeaderComponent","TopItemListComponent","ListComponent","ItemComponent","GroupComponent","ScrollerComponent","EmptyPlaceholder","ScrollSeekPlaceholder","addDeprecatedAlias","alias","warn","combinedSystem","propsSystem","deprecatedProps","group","scrollingStateChange","adjustForPrependedItems","maxHeightCacheSize","footer","header","HeaderContainer","FooterContainer","ItemContainer","ScrollContainer","GroupContainer","ListContainer","emptyComponent","deprecateComponentProp","componentName","comp","_extends2","placeholder","DefaultScrollSeekPlaceholder","React","GROUP_STYLE","zIndex","overflowAnchor","Items","memo","showTopList","_ref5$showTopList","useEmitterValue","usePublisher","windowScrollContainerStateCallback","_scrollContainerStateCallback","containerStyle","boxSizing","paddingTop","paddingBottom","marginTop","contextPropIfNotDomElement","scrollerStyle","outline","overflowY","WebkitOverflowScrolling","viewportStyle","topItemListStyle","Header","Footer","buildScroller","useEmitter","props","_objectWithoutPropertiesLoose","_useScrollTop","tabIndex","buildWindowScroller","_useScrollTop2","Viewport","viewportRef","compose","WindowViewport","TopItemListContainer","TopItemList","systemToComponent","required","optional","methods","events","TheViewport","WindowScroller","Scroller","List","Component","_systemToComponent","gridComponentPropsSystem","itemClassName","listClassName","GridItems","scrollHeightCallback","listRef","firstItem","firstChild","className","Grid","tableComponentPropsSystem","fixedHeaderContent","TableComponent","TableHeadComponent","TableBodyComponent","TableRowComponent","FillerRow","padding","border","paddingTopEl","paddingBottomEl","theadRef","TheScroller","TheTable","TheTHead","theHead","borderSpacing","Table","Virtuoso","GroupedVirtuoso","TableVirtuoso","VirtuosoGrid"],"mappings":"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"}